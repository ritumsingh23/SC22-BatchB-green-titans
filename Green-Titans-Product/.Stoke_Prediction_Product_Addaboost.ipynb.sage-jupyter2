{"backend_state":"running","connection_file":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/.local/share/jupyter/runtime/kernel-8020b5cb-30ee-4a37-832c-2a9a1858a213.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657206868763,"exec_count":1,"id":"fb6906","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport seaborn as sns","kernel":"ds_env","pos":0,"start":1657206867221,"state":"done","type":"cell"}
{"cell_type":"code","end":1657206869548,"exec_count":2,"id":"8832be","input":"sd = pd.read_csv(\"healthcare-dataset-stroke-data.csv\")\n#hypertension = high blood pressure\nsd.dropna(axis = 0, how = 'any', inplace = True)\nsd.drop(sd.index[sd['gender'] == 'Other'], inplace = True)\n\nsd1 = sd.loc[sd['avg_glucose_level'] <= 168.32]\nsd = sd1\nsd.reset_index(drop = True, inplace = True)\n\nsd2 = sd.loc[sd['bmi'] <= 47.5]\nsd = sd2\nsd.reset_index(drop = True, inplace = True)\n\nsd.drop('id',inplace=True,axis=1)\n\nsd.head(10)","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_1672/2426648697.py:14: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd.drop('id',inplace=True,axis=1)\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>ever_married</th>\n      <th>work_type</th>\n      <th>Residence_type</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>smoking_status</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Male</td>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Female</td>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Female</td>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>Unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Female</td>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Female</td>\n      <td>61.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Govt_job</td>\n      <td>Rural</td>\n      <td>120.46</td>\n      <td>36.8</td>\n      <td>smokes</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Female</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>104.51</td>\n      <td>27.3</td>\n      <td>smokes</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Female</td>\n      <td>50.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Rural</td>\n      <td>167.41</td>\n      <td>30.9</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Female</td>\n      <td>60.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>89.22</td>\n      <td>37.8</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Male</td>\n      <td>71.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>102.87</td>\n      <td>27.2</td>\n      <td>formerly smoked</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   gender   age  hypertension  heart_disease ever_married      work_type  \\\n0    Male  80.0             0              1          Yes        Private   \n1    Male  74.0             1              1          Yes        Private   \n2  Female  69.0             0              0           No        Private   \n3  Female  78.0             0              0          Yes        Private   \n4  Female  81.0             1              0          Yes        Private   \n5  Female  61.0             0              1          Yes       Govt_job   \n6  Female  54.0             0              0          Yes        Private   \n7  Female  50.0             1              0          Yes  Self-employed   \n8  Female  60.0             0              0           No        Private   \n9    Male  71.0             0              0          Yes        Private   \n\n  Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n0          Rural             105.92  32.5     never smoked       1  \n1          Rural              70.09  27.4     never smoked       1  \n2          Urban              94.39  22.8     never smoked       1  \n3          Urban              58.57  24.2          Unknown       1  \n4          Rural              80.43  29.7     never smoked       1  \n5          Rural             120.46  36.8           smokes       1  \n6          Urban             104.51  27.3           smokes       1  \n7          Rural             167.41  30.9     never smoked       1  \n8          Urban              89.22  37.8     never smoked       1  \n9          Urban             102.87  27.2  formerly smoked       1  "},"exec_count":2}},"pos":1,"start":1657206869209,"state":"done","type":"cell"}
{"cell_type":"code","end":1657206877012,"exec_count":3,"id":"f774dd","input":"target = sd[\"stroke\"]\ntarget","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0       1\n1       1\n2       1\n3       1\n4       1\n       ..\n4254    0\n4255    0\n4256    0\n4257    0\n4258    0\nName: stroke, Length: 4259, dtype: int64"},"exec_count":3}},"pos":3,"start":1657206877006,"state":"done","type":"cell"}
{"cell_type":"code","end":1657206915613,"exec_count":8,"id":"3cd3e7","input":"genderdummy = pd.get_dummies(sd[\"gender\"])\nsd[\"gender_type\"] = genderdummy[\"Male\"]\nmarrydummy = pd.get_dummies(sd[\"ever_married\"])\nsd[\"married\"] = marrydummy[\"Yes\"]\nreddummy = pd.get_dummies(sd[\"Residence_type\"])\nsd[\"if_live_in_city\"] = reddummy[\"Urban\"]\nsmokedummy = pd.get_dummies(sd[\"smoking_status\"])\nsd[\"never_smoke\"] = smokedummy[\"never smoked\"]\n\nsd.drop(['gender','ever_married','Residence_type',\"smoking_status\",\"work_type\"],axis=1,inplace=True)","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_1672/3308764764.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd[\"gender_type\"] = genderdummy[\"Male\"]\n/tmp/ipykernel_1672/3308764764.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd[\"married\"] = marrydummy[\"Yes\"]\n/tmp/ipykernel_1672/3308764764.py:6: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd[\"if_live_in_city\"] = reddummy[\"Urban\"]\n/tmp/ipykernel_1672/3308764764.py:8: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd[\"never_smoke\"] = smokedummy[\"never smoked\"]\n/tmp/ipykernel_1672/3308764764.py:10: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  sd.drop(['gender','ever_married','Residence_type',\"smoking_status\",\"work_type\"],axis=1,inplace=True)\n"}},"pos":2,"start":1657206915500,"state":"done","type":"cell"}
{"cell_type":"code","end":1657206922882,"exec_count":9,"id":"2d1cf3","input":"input_c=sd.loc[:, sd.columns != \"stroke\"]","kernel":"ds_env","pos":4,"start":1657206922876,"state":"done","type":"cell"}
{"cell_type":"code","end":1657206941537,"exec_count":11,"id":"4d5e88","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_c, target, test_size=0.75)","kernel":"ds_env","pos":5,"start":1657206941534,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1ca6e2","input":"","pos":16,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"70d3fe","input":"","pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a623c6","input":"","pos":15,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"7bcdbf","input":"","output":{"0":{"ename":"TypeError","evalue":"scatter_3d() got an unexpected keyword argument 'avg_glucose_level'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [11]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m hd[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mheart_disease\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m=\u001b[39mhd[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mheart_disease\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m.\u001b[39mreplace([\u001b[38;5;241m1\u001b[39m],\u001b[38;5;241m12\u001b[39m)\n\u001b[1;32m      2\u001b[0m hd[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mheart_disease\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m=\u001b[39mhd[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mheart_disease\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m.\u001b[39mreplace([\u001b[38;5;241m0\u001b[39m],\u001b[38;5;241m6\u001b[39m)\n\u001b[0;32m----> 3\u001b[0m bmiAgeSexStrokePlot \u001b[38;5;241m=\u001b[39m \u001b[43mpx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter_3d\u001b[49m\u001b[43m(\u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mhd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mavg_glucose_level\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mhd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mage\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mz\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mhd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mbmi\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msymbol\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstroke\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mdict\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mstroke\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNumber of Strokes\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43mage\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mAge\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43mgender\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mSex\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbmi\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mBMI\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mheart_disease\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mIf Heart Disease Present\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mgender\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43mopacity\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m0.8\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43msize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mheart_disease\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43msize_max\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m12\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43mavg_glucose_level\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mAverage Glucose Level\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      4\u001b[0m bmiAgeSexStrokePlot\u001b[38;5;241m.\u001b[39mupdate_yaxes(tick0\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1.0\u001b[39m, dtick\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1.0\u001b[39m)\n\u001b[1;32m      5\u001b[0m \u001b[38;5;66;03m#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\u001b[39;00m\n","\u001b[0;31mTypeError\u001b[0m: scatter_3d() got an unexpected keyword argument 'avg_glucose_level'"]}},"pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":4,"id":"a63e1e","input":"def pie():\n    global sd\n    new_stroke_data = sd.groupby('smoking_status').count()\n    options = list(new_stroke_data.index)\n    counts = []\n    for val in options:\n        counts.append(new_stroke_data[\"heart_disease\"][val])\n\n    new_fig = px.pie(new_stroke_data, values=counts, names=options, title=\"Percentage of Smokers\")\n    new_fig.show()\ndef scat():\n    global sd\n    new_fig = px.scatter(sd, x=\"age\", y=\"bmi\",color=\"avg_glucose_level\")\n    new_fig.show()\n\ndef smoke_hist():\n    global sd\n    fig = px.histogram(sd, x=\"smoking_status\", y=\"avg_glucose_level\", color='gender', barmode='group',height=400)\n    fig.show()","pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"3b38e7","input":"pie()","output":{"0":{"data":{"iframe":"35f3ef054ff8e26aa72d0a492ed419595f3b4704"},"exec_count":5,"output_type":"execute_result"}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"e478d4","input":"scat()","output":{"0":{"data":{"iframe":"1fbb1f850c4a2ae43bf21130380f22e9ac613ee7"},"exec_count":6,"output_type":"execute_result"}},"pos":9,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b68a68","input":"smoke_hist()","output":{"0":{"data":{"iframe":"ec38360219f2b7630ecc60ebe683eb1681499184"},"exec_count":7,"output_type":"execute_result"}},"pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"530b87","input":"fig = px.scatter_matrix(sd,\n    dimensions=[\"age\", \"avg_glucose_level\", \"bmi\"],\n    color=\"stroke\")\nfig.show()","output":{"0":{"data":{"iframe":"a0c50203fc788970a575f5438a194ecf6d762052"},"exec_count":8,"output_type":"execute_result"}},"pos":11,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"8b1598","input":"hd = pd.read_csv(\"./healthcare-dataset-stroke-data.csv\")\nhd.drop('id',inplace=True,axis=1)\nhd.dropna(inplace=True)\nhd.reset_index(drop=True, inplace=False)\nhd.drop([466, 544, 928, 1559, 2128, 2764, 2840, 3825, 4188, 4209, 4838, 270, 358])\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([1],15)\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([0],6)\nbmiAgeSexStrokePlot = px.scatter_3d(hd,y=hd[\"avg_glucose_level\"],x=hd[\"age\"], z=hd[\"bmi\"], symbol=\"ever_married\",labels=dict(stroke=\"Number of Strokes\",age=\"Age\",gender=\"Sex\", bmi=\"BMI\", heart_disease=\"If Heart Disease Present\", avg_glucose_level=\"Average Glucose Level\",smoking_status=\"If Smoke\"),color=\"stroke\",opacity=0.8,size=\"heart_disease\",size_max=20)\nbmiAgeSexStrokePlot.update_yaxes(tick0=1.0, dtick=1.0)\n#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\nbmiAgeSexStrokePlot.update_xaxes(tick0=1, dtick=10)\nbmiAgeSexStrokePlot.update_layout(margin=dict(l=40, r=40, b=40, t=40))\n#Multidimensional plot that depicts most of the variables with the stats of the given person including marriage status.\n#Younger people typically have a lower glucose level\n#Higher glucose level, higher chance to get a stroke\n#Older, higher chance\n#Higher BMI, higher chance\n#Females typically have a lower glucose level","output":{"0":{"data":{"iframe":"da874732008388ee249f2e47ba4701087ca80d95"},"exec_count":9,"output_type":"execute_result"}},"pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"27ece3","input":"## EDA - Exploratory Data Analysis\n\n","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a180a4","input":"The older you are, the more likely you are to have a stroke. The higher you average glucose level is, the higher the stroke risk becomes. The higher your BMI is, the more likely you ate to have a stroke\n\nThe most dangerous combination is a high glucose level, and old age\n\nThe only data point that does not have any direct relation to strokes is age, although it does raise the chance for a person to get a stroke, when they are older\n","pos":12,"state":"done","type":"cell"}
{"end":1657204407279,"exec_count":29,"id":"cf94a2","input":"### Printing SD\nsd","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n      <th>gender_type</th>\n      <th>married</th>\n      <th>if_live_in_city</th>\n      <th>never_smoke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 10 columns</p>\n</div>","text/plain":"       age  hypertension  heart_disease  avg_glucose_level   bmi  stroke  \\\n0     80.0             0              1             105.92  32.5       1   \n1     74.0             1              1              70.09  27.4       1   \n2     69.0             0              0              94.39  22.8       1   \n3     78.0             0              0              58.57  24.2       1   \n4     81.0             1              0              80.43  29.7       1   \n...    ...           ...            ...                ...   ...     ...   \n4254  13.0             0              0             103.08  18.6       0   \n4255  81.0             0              0             125.20  40.0       0   \n4256  35.0             0              0              82.99  30.6       0   \n4257  51.0             0              0             166.29  25.6       0   \n4258  44.0             0              0              85.28  26.2       0   \n\n      gender_type  married  if_live_in_city  never_smoke  \n0               1        1                0            1  \n1               1        1                0            1  \n2               0        0                1            1  \n3               0        1                1            0  \n4               0        1                0            1  \n...           ...      ...              ...          ...  \n4254            0        0                0            0  \n4255            0        1                1            1  \n4256            0        1                0            1  \n4257            1        1                0            0  \n4258            0        1                1            0  \n\n[4259 rows x 10 columns]"},"exec_count":29}},"pos":2.5,"start":1657204407256,"state":"done","type":"cell"}
{"end":1657206931201,"exec_count":10,"id":"4985ee","input":"input_c","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>gender_type</th>\n      <th>married</th>\n      <th>if_live_in_city</th>\n      <th>never_smoke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 9 columns</p>\n</div>","text/plain":"       age  hypertension  heart_disease  avg_glucose_level   bmi  gender_type  \\\n0     80.0             0              1             105.92  32.5            1   \n1     74.0             1              1              70.09  27.4            1   \n2     69.0             0              0              94.39  22.8            0   \n3     78.0             0              0              58.57  24.2            0   \n4     81.0             1              0              80.43  29.7            0   \n...    ...           ...            ...                ...   ...          ...   \n4254  13.0             0              0             103.08  18.6            0   \n4255  81.0             0              0             125.20  40.0            0   \n4256  35.0             0              0              82.99  30.6            0   \n4257  51.0             0              0             166.29  25.6            1   \n4258  44.0             0              0              85.28  26.2            0   \n\n      married  if_live_in_city  never_smoke  \n0           1                0            1  \n1           1                0            1  \n2           0                1            1  \n3           1                1            0  \n4           1                0            1  \n...       ...              ...          ...  \n4254        0                0            0  \n4255        1                1            1  \n4256        1                0            1  \n4257        1                0            0  \n4258        1                1            0  \n\n[4259 rows x 9 columns]"},"exec_count":10}},"pos":4.5,"start":1657206931166,"state":"done","type":"cell"}
{"end":1657206947244,"exec_count":12,"id":"e15f73","input":"x_train","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>gender_type</th>\n      <th>married</th>\n      <th>if_live_in_city</th>\n      <th>never_smoke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3756</th>\n      <td>4.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.27</td>\n      <td>14.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>59.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>86.23</td>\n      <td>30.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1165</th>\n      <td>50.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>68.80</td>\n      <td>34.9</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1238</th>\n      <td>5.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>82.41</td>\n      <td>18.4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2471</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93.15</td>\n      <td>23.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2661</th>\n      <td>71.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>91.85</td>\n      <td>27.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3292</th>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>90.67</td>\n      <td>37.8</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4215</th>\n      <td>21.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>89.29</td>\n      <td>23.4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>348</th>\n      <td>46.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>78.75</td>\n      <td>37.8</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1923</th>\n      <td>29.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>86.55</td>\n      <td>29.8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1064 rows × 9 columns</p>\n</div>","text/plain":"       age  hypertension  heart_disease  avg_glucose_level   bmi  gender_type  \\\n3756   4.0             0              0              94.27  14.0            0   \n32    59.0             0              0              86.23  30.0            1   \n1165  50.0             1              0              68.80  34.9            0   \n1238   5.0             0              0              82.41  18.4            1   \n2471  78.0             0              0              93.15  23.6            0   \n...    ...           ...            ...                ...   ...          ...   \n2661  71.0             0              0              91.85  27.6            0   \n3292  51.0             0              0              90.67  37.8            0   \n4215  21.0             0              0              89.29  23.4            1   \n348   46.0             0              0              78.75  37.8            0   \n1923  29.0             0              0              86.55  29.8            0   \n\n      married  if_live_in_city  never_smoke  \n3756        0                1            0  \n32          1                1            0  \n1165        1                0            1  \n1238        0                1            0  \n2471        1                1            0  \n...       ...              ...          ...  \n2661        1                0            0  \n3292        1                1            0  \n4215        0                0            1  \n348         1                0            0  \n1923        0                0            0  \n\n[1064 rows x 9 columns]"},"exec_count":12}},"pos":5.25,"scrolled":true,"start":1657206947226,"state":"done","type":"cell"}
{"end":1657206960493,"exec_count":13,"id":"2b9384","input":"from imblearn.over_sampling import SMOTE\nfrom imblearn.under_sampling import RandomUnderSampler","kernel":"ds_env","pos":5.375,"start":1657206960479,"state":"done","type":"cell"}
{"end":1657206966125,"exec_count":14,"id":"f04f79","input":"oversample = SMOTE(sampling_strategy=0.1)\nunder = RandomUnderSampler(sampling_strategy=0.5)\nx_train, y_train = oversample.fit_resample(x_train,y_train)\nx_train, y_train = under.fit_resample(x_train,y_train)","kernel":"ds_env","pos":5.4375,"start":1657206966104,"state":"done","type":"cell"}
{"end":1657207000285,"exec_count":19,"id":"e24f1e","input":"y_hat = clf.predict(x_test)","kernel":"ds_env","pos":5.875,"start":1657207000203,"state":"done","type":"cell"}
{"end":1657207011248,"exec_count":20,"id":"8c3039","input":"total_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.1624413145539906\n"}},"pos":5.9375,"start":1657207011233,"state":"done","type":"cell"}
{"end":1657207015553,"exec_count":21,"id":"bbdda1","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":21},"1":{"data":{"image/png":"72b6e6395de9df873889ea6b4f41a25e606e102e","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":5.96875,"start":1657207015140,"state":"done","type":"cell"}
{"end":1657216399954,"exec_count":58,"id":"2b5253","input":"clf.fit(x_train,y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=9),\n                   n_estimators=30)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">AdaBoostClassifier</label><div class=\"sk-toggleable__content\"><pre>AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=9),\n                   n_estimators=30)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">base_estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=9)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=9)</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=9),\n                   n_estimators=30)"},"exec_count":58}},"pos":5.75,"start":1657216399941,"state":"done","type":"cell"}
{"end":1657216836657,"exec_count":66,"id":"581fdb","input":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfor i in range(1,21,1):\n    base = DecisionTreeClassifier(max_depth = i)\n    clf = AdaBoostClassifier(n_estimators = 100, base_estimator = base, learning_rate = 1.3)\n    cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\n    n_scores = cross_val_score(clf, x_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\n    print('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)),\"max depth = \"+str(i),\"model = Tree\")\nfor i in range(1,21,1):\n    baseL = LogisticRegression(C = i/10)\n    clf = AdaBoostClassifier(n_estimators = 100, base_estimator = base, learning_rate = 1.3)\n    cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\n    n_scores = cross_val_score(clf, x_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\n    print('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)),\"max depth = \"+str(i),\"model = logic\")","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Accuracy: 0.802 (0.066) max depth = 1 model = Tree\n"},"1":{"name":"stdout","text":"Accuracy: 0.840 (0.066) max depth = 2 model = Tree\n"},"10":{"name":"stdout","text":"Accuracy: 0.829 (0.071) max depth = 11 model = Tree\nAccuracy: 0.831 (0.061) max depth = 12 model = Tree\n"},"11":{"name":"stdout","text":"Accuracy: 0.819 (0.062) max depth = 13 model = Tree\nAccuracy: 0.829 (0.065) max depth = 14 model = Tree\n"},"12":{"name":"stdout","text":"Accuracy: 0.824 (0.066) max depth = 15 model = Tree\nAccuracy: 0.824 (0.064) max depth = 16 model = Tree\n"},"13":{"name":"stdout","text":"Accuracy: 0.826 (0.064) max depth = 17 model = Tree\nAccuracy: 0.825 (0.062) max depth = 18 model = Tree\n"},"14":{"name":"stdout","text":"Accuracy: 0.823 (0.058) max depth = 19 model = Tree\nAccuracy: 0.828 (0.063) max depth = 20 model = Tree\n"},"15":{"name":"stdout","text":"Accuracy: 0.823 (0.069) max depth = 1 model = logic\n"},"16":{"name":"stdout","text":"Accuracy: 0.825 (0.062) max depth = 2 model = logic\nAccuracy: 0.827 (0.064) max depth = 3 model = logic\n"},"17":{"name":"stdout","text":"Accuracy: 0.827 (0.061) max depth = 4 model = logic\nAccuracy: 0.828 (0.066) max depth = 5 model = logic\n"},"18":{"name":"stdout","text":"Accuracy: 0.821 (0.068) max depth = 6 model = logic\n"},"19":{"name":"stdout","text":"Accuracy: 0.829 (0.063) max depth = 7 model = logic\nAccuracy: 0.820 (0.063) max depth = 8 model = logic\n"},"2":{"name":"stdout","text":"Accuracy: 0.846 (0.053) max depth = 3 model = Tree\n"},"20":{"name":"stdout","text":"Accuracy: 0.819 (0.061) max depth = 9 model = logic\nAccuracy: 0.825 (0.062) max depth = 10 model = logic\n"},"21":{"name":"stdout","text":"Accuracy: 0.822 (0.064) max depth = 11 model = logic\nAccuracy: 0.830 (0.066) max depth = 12 model = logic\n"},"22":{"name":"stdout","text":"Accuracy: 0.826 (0.061) max depth = 13 model = logic\nAccuracy: 0.829 (0.064) max depth = 14 model = logic\n"},"23":{"name":"stdout","text":"Accuracy: 0.827 (0.062) max depth = 15 model = logic\nAccuracy: 0.828 (0.062) max depth = 16 model = logic\n"},"24":{"name":"stdout","text":"Accuracy: 0.829 (0.062) max depth = 17 model = logic\nAccuracy: 0.826 (0.062) max depth = 18 model = logic\n"},"25":{"name":"stdout","text":"Accuracy: 0.827 (0.065) max depth = 19 model = logic\nAccuracy: 0.829 (0.061) max depth = 20 model = logic\n"},"3":{"name":"stdout","text":"Accuracy: 0.852 (0.052) max depth = 4 model = Tree\n"},"4":{"name":"stdout","text":"Accuracy: 0.855 (0.050) max depth = 5 model = Tree\n"},"5":{"name":"stdout","text":"Accuracy: 0.863 (0.042) max depth = 6 model = Tree\n"},"6":{"name":"stdout","text":"Accuracy: 0.864 (0.060) max depth = 7 model = Tree\n"},"7":{"name":"stdout","text":"Accuracy: 0.851 (0.056) max depth = 8 model = Tree\n"},"8":{"name":"stdout","text":"Accuracy: 0.854 (0.066) max depth = 9 model = Tree\n"},"9":{"name":"stdout","text":"Accuracy: 0.831 (0.069) max depth = 10 model = Tree\n"}},"pos":5.5,"start":1657216769860,"state":"done","type":"cell"}
{"end":1657217663557,"exec_count":68,"id":"d3d395","input":"from sklearn.model_selection import GridSearchCV\ntree = DecisionTreeClassifier(max_depth = 6)\nmodel=AdaBoostClassifier(algorithm = \"SAMME\", base_estimator = svc)\ngrid = dict()\ngrid['n_estimators'] = [10, 30, 50, 100, 500]\ngrid['learning_rate'] = [0.7, 1.0, 1.3]\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\ngrid_search = GridSearchCV(estimator=model, param_grid=grid, n_jobs=-1, cv=cv, scoring='accuracy', refit=True)\ngrid_search.fit(x_train, y_train)\nprint(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Best: 0.811685 using {'learning_rate': 1.0, 'n_estimators': 30}\n"}},"pos":5.625,"start":1657216963308,"state":"done","type":"cell"}
{"end":1657217680720,"exec_count":69,"id":"e0bdf0","input":"base = DecisionTreeClassifier(max_depth = 6)\nclf = AdaBoostClassifier(n_estimators = 30, base_estimator = base, learning_rate = 1.0)\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(clf, x_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Accuracy: 0.852 (0.060)\n"}},"pos":5.6875,"start":1657217678934,"state":"done","type":"cell"}
{"end":1657217697565,"exec_count":70,"id":"d99657","input":"clf = AdaBoostClassifier(n_estimators = 100, base_estimator = base, learning_rate = 1.3)\nn_scores = cross_val_score(clf, x_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Accuracy: 0.871 (0.052)\n"}},"pos":5.71875,"start":1657217692022,"state":"done","type":"cell"}
{"end":1657217910259,"exec_count":72,"id":"86d7b9","input":"bases = SVC()\nclfs = AdaBoostClassifier(base_estimator = bases, algorithm = \"SAMME\")\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\nn_scores = cross_val_score(clfs, x_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Accuracy: 0.667 (0.012)\n"}},"pos":5.65625,"start":1657217894735,"state":"done","type":"cell"}
{"id":"2c51aa","input":"","pos":5.8125,"state":"done","type":"cell"}
{"id":"cbc9ef","input":"","pos":5.984375,"state":"done","type":"cell"}
{"id":0,"time":1657206860334,"type":"user"}
{"last_load":1657202770908,"type":"file"}