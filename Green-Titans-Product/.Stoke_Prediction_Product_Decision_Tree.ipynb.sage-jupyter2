{"backend_state":"running","connection_file":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/.local/share/jupyter/runtime/kernel-de9afeca-d8f6-4b14-ad9f-967a524d5c25.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657218942102,"exec_count":4,"id":"14f362","input":"#hypertension = high blood pressure\nstroke_data.dropna(axis = 0, how = 'any', inplace = True)\n\nstroke_data1 = stroke_data.loc[stroke_data['avg_glucose_level'] <= 168.32]\nstroke_data = stroke_data1\nstroke_data.reset_index(drop = True, inplace = True)\n\nstroke_data2 = stroke_data.loc[stroke_data['bmi'] <= 47.5]\nstroke_data = stroke_data2\nstroke_data.reset_index(drop = True, inplace = True)","kernel":"ds_env","no_halt":true,"pos":3,"start":1657218942091,"state":"done","type":"cell"}
{"cell_type":"code","end":1657218942827,"exec_count":12,"id":"8b3159","input":"def pie():\n    global stroke_data\n    new_stroke_data = stroke_data.groupby('smoking_status_formerly smoked').count()\n    options = list(new_stroke_data.index)\n    counts = []\n    for val in options:\n        counts.append(new_stroke_data[\"heart_disease\"][val])\n\n    new_fig = px.pie(new_stroke_data, values=counts, names=options, title=\"Percentage of Smokers\")\n    new_fig.show()\ndef scat():\n    global stroke_data\n    new_fig = px.scatter(stroke_data, x=\"age\", y=\"bmi\",color=\"avg_glucose_level\")\n    new_fig.show()\n\ndef smoke_hist():\n    global stroke_data\n    fig = px.histogram(stroke_data, x=\"smoking_status_formerly smoked\", y=\"avg_glucose_level\", barmode='group',height=400)\n    fig.show()","kernel":"ds_env","no_halt":true,"pos":14,"start":1657218942817,"state":"done","type":"cell"}
{"cell_type":"code","end":1657219539545,"exec_count":37,"id":"87b778","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn import preprocessing\nfrom sklearn import utils\nsudo pip install imbalanced-learn\nimport imblearn as imblearn","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1055483398.py, line 11)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [37]\u001b[0;36m\u001b[0m\n\u001b[0;31m    sudo pip install imbalanced-learn\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":1,"start":1657219539538,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"211206","input":"## EDA - Exploratory Data Analysis\n\n","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"81c3d4","input":"The older you are, the more likely you are to have a stroke. The higher you average glucose level is, the higher the stroke risk becomes. The higher your BMI is, the more likely you ate to have a stroke\n\nThe most dangerous combination is a high glucose level, and old age\n\nThe only data point that does not have any direct relation to strokes is age, although it does raise the chance for a person to get a stroke, when they are older\n","pos":19,"state":"done","type":"cell"}
{"end":1657218943631,"exec_count":18,"id":"5d5d0d","input":"stroke_data\nstroke_data.drop('smoking_status_smokes', axis = 1, inplace = True)","kernel":"ds_env","no_halt":true,"pos":20.5,"start":1657218943627,"state":"done","type":"cell"}
{"end":1657218943760,"exec_count":25,"id":"fcb9b4","input":"print(len(Y_pred), len(Y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"852 852\n"}},"pos":24.25,"start":1657218943756,"state":"done","type":"cell"}
{"end":1657218943779,"exec_count":26,"id":"84592e","input":"clf_gini.score(X_test, Y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.9612676056338029"},"exec_count":26}},"pos":24.375,"start":1657218943763,"state":"done","type":"cell"}
{"end":1657218943793,"exec_count":27,"id":"44bb6c","input":"accuracy_score(Y_test, Y_pred)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.9612676056338029"},"exec_count":27}},"pos":24.5,"start":1657218943784,"state":"done","type":"cell"}
{"end":1657219549400,"exec_count":38,"id":"a0def6","input":"sudo pip install imbalanced-learn\nimport imblearn as imblearn\nprint(imblearn 0.5.0)","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3510200374.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [38]\u001b[0;36m\u001b[0m\n\u001b[0;31m    sudo pip install imbalanced-learn\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":1.5,"start":1657219549397,"state":"done","type":"cell"}
{"end":1657219864506,"exec_count":41,"id":"84fac7","input":"stroke_data = pd.read_csv(\"healthcare-dataset-stroke-data.csv\")","kernel":"ds_env","pos":1.75,"start":1657219864493,"state":"done","type":"cell"}
{"id":"0fb150","input":"#print(\"Confusion Matrix: \", confusion_matrix(Y_test, Y_pred))\nprint(\"Accuarcy: \", accuracy_score(Y_test, Y_pred)*100)\n#852*2\nprint(\"Report : \", classification_report(Y_test, Y_pred))","pos":24.75,"type":"cell"}
{"id":"2977f1","input":"scat()","pos":16,"type":"cell"}
{"id":"29a5a7","input":"dummy = pd.get_dummies(stroke_data)\nstroke_data = dummy\nstroke_data","pos":8.75,"type":"cell"}
{"id":"2f4857","input":"stroke_data.describe()","pos":9.5,"type":"cell"}
{"id":"4138b9","input":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,\n                                  max_depth = 3, min_samples_leaf = 5)\nclf_gini.fit(X_train, Y_train)","pos":21.86328125,"type":"cell"}
{"id":"56a842","input":"X_train, X_test, Y_train, Y_test = train_test_split(X , Y, test_size = 0.2)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","pos":21.7265625,"type":"cell"}
{"id":"57fe73","input":"pie()","pos":15,"type":"cell"}
{"id":"5a050a","input":"data = importdata()\nX, Y, X_train, X_test, Y_train, Y_test = splitdataset(data)\nclf_gini = train_using_gini(X_train, X_test, Y_train)\nclf_entropy = train_using_entropy(X_train, X_test, Y_train)\nprint(\"Results Using Gini Index:\")\ny_pred_gini = prediction(X_test, clf_entropy)\ncal_accuarcy(Y_test, Y_pred_gini)\nprint(\"Results Using Entropy:\")\ny_pred_entropy = prediction(X_test, clf_entropy)\ncal_accuracy(Y_test, Y_pred_entropy)","pos":25.75,"type":"cell"}
{"id":"63d68a","input":"hd = pd.read_csv(\"./healthcare-dataset-stroke-data.csv\")\nhd.drop('id',inplace=True,axis=1)\nhd.dropna(inplace=True)\nhd.reset_index(drop=True, inplace=False)\nhd.drop([466, 544, 928, 1559, 2128, 2764, 2840, 3825, 4188, 4209, 4838, 270, 358])\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([1],15)\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([0],6)\nbmiAgeSexStrokePlot = px.scatter_3d(hd,y=hd[\"avg_glucose_level\"],x=hd[\"age\"], z=hd[\"bmi\"], symbol=\"ever_married\",labels=dict(stroke=\"Number of Strokes\",age=\"Age\",gender=\"Sex\", bmi=\"BMI\", heart_disease=\"If Heart Disease Present\", avg_glucose_level=\"Average Glucose Level\",smoking_status=\"If Smoke\"),color=\"stroke\",opacity=0.8,size=\"heart_disease\",size_max=20)\nbmiAgeSexStrokePlot.update_yaxes(tick0=1.0, dtick=1.0)\n#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\nbmiAgeSexStrokePlot.update_xaxes(tick0=1, dtick=10)\nbmiAgeSexStrokePlot.update_layout(margin=dict(l=40, r=40, b=40, t=40))\n#Multidimensional plot that depicts most of the variables with the stats of the given person including marriage status.\n#Younger people typically have a lower glucose level\n#Higher glucose level, higher chance to get a stroke\n#Older, higher chance\n#Higher BMI, higher chance\n#Females typically have a lower glucose level","pos":19.5,"type":"cell"}
{"id":"72b3a1","input":"X = stroke_data[['age', 'hypertension', 'heart_disease', 'avg_glucose_level', 'bmi', 'smoking_status_Unknown', 'smoking_status_formerly smoked', 'smoking_status_never smoked']]\nX","pos":21.609375,"type":"cell"}
{"id":"7af0d0","input":"stroke_data['smoking_status']","pos":7,"type":"cell"}
{"id":"87094c","input":"stroke_data.drop(['gender', 'id', 'work_type', 'ever_married', 'Residence_type'], axis=1, inplace = True)","pos":4.5,"type":"cell"}
{"id":"8e1c76","input":"smoke_hist()","pos":17,"type":"cell"}
{"id":"cbcd84","input":"Y = stroke_data['stroke']\nY","pos":21.1796875,"type":"cell"}
{"id":"eca116","input":"print(\"Confusion Matrix: \", confusion_matrix(Y_test, Y_pred))","pos":25.125,"type":"cell"}
{"id":"f442a5","input":"fig = px.scatter_matrix(stroke_data,\n    dimensions=[\"age\", \"avg_glucose_level\", \"bmi\"],\n    color=\"stroke\")\nfig.show()","pos":17.5,"type":"cell"}
{"id":"fea9bd","input":"Y_pred = clf_gini.predict(X_test)\nprint(\"predicted values:\")\nprint(Y_pred)\nY_pred = clf_gini.predict(X_test)\nprint(\"predicted values:\")\nprint(Y_pred)","pos":23,"type":"cell"}
{"id":0,"time":1657224966877,"type":"user"}
{"last_load":1657202030690,"type":"file"}