{"backend_state":"running","connection_file":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/.local/share/jupyter/runtime/kernel-4b40d2a5-ae2b-40c7-bfac-84b11b624e0d.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657638257736,"exec_count":1,"id":"87b778","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn import preprocessing\nfrom sklearn import utils\nfrom sklearn.model_selection import GridSearchCV\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\ndt = DecisionTreeClassifier(random_state = 42)","kernel":"ds_env","no_halt":true,"pos":0,"start":1657638254479,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638257791,"exec_count":2,"id":"84fac7","input":"stroke_data = pd.read_csv(\"healthcare-dataset-stroke-data.csv\")","kernel":"ds_env","no_halt":true,"pos":1,"start":1657638257754,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638257831,"exec_count":3,"id":"14f362","input":"#hypertension = high blood pressure\nstroke_data.dropna(axis = 0, how = 'any', inplace = True)\n\nstroke_data1 = stroke_data.loc[stroke_data['avg_glucose_level'] <= 168.32]\nstroke_data = stroke_data1\nstroke_data.reset_index(drop = True, inplace = True)\n\nstroke_data2 = stroke_data.loc[stroke_data['bmi'] <= 47.5]\nstroke_data = stroke_data2\nstroke_data.reset_index(drop = True, inplace = True)","kernel":"ds_env","no_halt":true,"pos":2,"start":1657638257804,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638258328,"exec_count":4,"id":"87094c","input":"stroke_data.drop(['gender', 'id', 'work_type', 'ever_married', 'Residence_type'], axis=1, inplace = True)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stderr","text":"/tmp/ipykernel_3967/2618776539.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  stroke_data.drop(['gender', 'id', 'work_type', 'ever_married', 'Residence_type'], axis=1, inplace = True)\n"}},"pos":3,"start":1657638257837,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638258353,"exec_count":5,"id":"7af0d0","input":"stroke_data['smoking_status']","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0          never smoked\n1          never smoked\n2          never smoked\n3               Unknown\n4          never smoked\n             ...       \n4255            Unknown\n4256       never smoked\n4257       never smoked\n4258    formerly smoked\n4259            Unknown\nName: smoking_status, Length: 4260, dtype: object"},"exec_count":5}},"pos":4,"start":1657638258347,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638258422,"exec_count":6,"id":"29a5a7","input":"dummy = pd.get_dummies(stroke_data)\nstroke_data = dummy\nstroke_data","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n      <th>smoking_status_Unknown</th>\n      <th>smoking_status_formerly smoked</th>\n      <th>smoking_status_never smoked</th>\n      <th>smoking_status_smokes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4259</th>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4260 rows Ã— 10 columns</p>\n</div>","text/plain":"       age  hypertension  heart_disease  avg_glucose_level   bmi  stroke  \\\n0     80.0             0              1             105.92  32.5       1   \n1     74.0             1              1              70.09  27.4       1   \n2     69.0             0              0              94.39  22.8       1   \n3     78.0             0              0              58.57  24.2       1   \n4     81.0             1              0              80.43  29.7       1   \n...    ...           ...            ...                ...   ...     ...   \n4255  13.0             0              0             103.08  18.6       0   \n4256  81.0             0              0             125.20  40.0       0   \n4257  35.0             0              0              82.99  30.6       0   \n4258  51.0             0              0             166.29  25.6       0   \n4259  44.0             0              0              85.28  26.2       0   \n\n      smoking_status_Unknown  smoking_status_formerly smoked  \\\n0                          0                               0   \n1                          0                               0   \n2                          0                               0   \n3                          1                               0   \n4                          0                               0   \n...                      ...                             ...   \n4255                       1                               0   \n4256                       0                               0   \n4257                       0                               0   \n4258                       0                               1   \n4259                       1                               0   \n\n      smoking_status_never smoked  smoking_status_smokes  \n0                               1                      0  \n1                               1                      0  \n2                               1                      0  \n3                               0                      0  \n4                               1                      0  \n...                           ...                    ...  \n4255                            0                      0  \n4256                            1                      0  \n4257                            1                      0  \n4258                            0                      0  \n4259                            0                      0  \n\n[4260 rows x 10 columns]"},"exec_count":6}},"pos":5,"start":1657638258362,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638258517,"exec_count":7,"id":"2f4857","input":"stroke_data.describe()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n      <th>smoking_status_Unknown</th>\n      <th>smoking_status_formerly smoked</th>\n      <th>smoking_status_never smoked</th>\n      <th>smoking_status_smokes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n      <td>4260.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>40.593070</td>\n      <td>0.068545</td>\n      <td>0.036385</td>\n      <td>91.515812</td>\n      <td>27.813028</td>\n      <td>0.031925</td>\n      <td>0.324178</td>\n      <td>0.157512</td>\n      <td>0.368779</td>\n      <td>0.149531</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>22.443644</td>\n      <td>0.252708</td>\n      <td>0.187268</td>\n      <td>22.715044</td>\n      <td>6.721922</td>\n      <td>0.175821</td>\n      <td>0.468122</td>\n      <td>0.364325</td>\n      <td>0.482531</td>\n      <td>0.356652</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.080000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>55.120000</td>\n      <td>10.300000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>22.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>75.060000</td>\n      <td>23.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>41.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>88.055000</td>\n      <td>27.400000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>58.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>104.055000</td>\n      <td>32.100000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>82.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>168.150000</td>\n      <td>47.500000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"               age  hypertension  heart_disease  avg_glucose_level  \\\ncount  4260.000000   4260.000000    4260.000000        4260.000000   \nmean     40.593070      0.068545       0.036385          91.515812   \nstd      22.443644      0.252708       0.187268          22.715044   \nmin       0.080000      0.000000       0.000000          55.120000   \n25%      22.000000      0.000000       0.000000          75.060000   \n50%      41.000000      0.000000       0.000000          88.055000   \n75%      58.000000      0.000000       0.000000         104.055000   \nmax      82.000000      1.000000       1.000000         168.150000   \n\n               bmi       stroke  smoking_status_Unknown  \\\ncount  4260.000000  4260.000000             4260.000000   \nmean     27.813028     0.031925                0.324178   \nstd       6.721922     0.175821                0.468122   \nmin      10.300000     0.000000                0.000000   \n25%      23.000000     0.000000                0.000000   \n50%      27.400000     0.000000                0.000000   \n75%      32.100000     0.000000                1.000000   \nmax      47.500000     1.000000                1.000000   \n\n       smoking_status_formerly smoked  smoking_status_never smoked  \\\ncount                     4260.000000                  4260.000000   \nmean                         0.157512                     0.368779   \nstd                          0.364325                     0.482531   \nmin                          0.000000                     0.000000   \n25%                          0.000000                     0.000000   \n50%                          0.000000                     0.000000   \n75%                          0.000000                     1.000000   \nmax                          1.000000                     1.000000   \n\n       smoking_status_smokes  \ncount            4260.000000  \nmean                0.149531  \nstd                 0.356652  \nmin                 0.000000  \n25%                 0.000000  \n50%                 0.000000  \n75%                 0.000000  \nmax                 1.000000  "},"exec_count":7}},"pos":6,"start":1657638258429,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638258536,"exec_count":8,"id":"8b3159","input":"def pie():\n    global stroke_data\n    new_stroke_data = stroke_data.groupby('smoking_status_formerly smoked').count()\n    options = list(new_stroke_data.index)\n    counts = []\n    for val in options:\n        counts.append(new_stroke_data[\"heart_disease\"][val])\n\n    new_fig = px.pie(new_stroke_data, values=counts, names=options, title=\"Percentage of Smokers\")\n    new_fig.show()\ndef scat():\n    global stroke_data\n    new_fig = px.scatter(stroke_data, x=\"age\", y=\"bmi\",color=\"avg_glucose_level\")\n    new_fig.show()\n\ndef smoke_hist():\n    global stroke_data\n    fig = px.histogram(stroke_data, x=\"smoking_status_formerly smoked\", y=\"avg_glucose_level\", barmode='group',height=400)\n    fig.show()","kernel":"ds_env","no_halt":true,"pos":8,"start":1657638258535,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638259251,"exec_count":9,"id":"57fe73","input":"pie()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"1cd5d89239244bbe60eb5f1c509db37d140cc9cd"}}},"pos":9,"start":1657638258543,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638259459,"exec_count":10,"id":"2977f1","input":"scat()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"19c989a396fa51c671be0f9646f43c24de7f2007"}}},"pos":10,"start":1657638259267,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638259600,"exec_count":11,"id":"8e1c76","input":"smoke_hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"7b8a8f3c1c506d72eab0c58ea453e669d72f8e74"}}},"pos":11,"start":1657638259468,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638259791,"exec_count":12,"id":"f442a5","input":"fig = px.scatter_matrix(stroke_data,\n    dimensions=[\"age\", \"avg_glucose_level\", \"bmi\"],\n    color=\"stroke\")\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"4c0f1e06ed3927ed4a1884172f163829a28e192c"}}},"pos":12,"start":1657638259613,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260065,"exec_count":13,"id":"63d68a","input":"hd = pd.read_csv(\"./healthcare-dataset-stroke-data.csv\")\nhd.drop('id',inplace=True,axis=1)\nhd.dropna(inplace=True)\nhd.reset_index(drop=True, inplace=False)\nhd.drop([466, 544, 928, 1559, 2128, 2764, 2840, 3825, 4188, 4209, 4838, 270, 358])\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([1],15)\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([0],6)\nbmiAgeSexStrokePlot = px.scatter_3d(hd,y=hd[\"avg_glucose_level\"],x=hd[\"age\"], z=hd[\"bmi\"], symbol=\"ever_married\",labels=dict(stroke=\"Number of Strokes\",age=\"Age\",gender=\"Sex\", bmi=\"BMI\", heart_disease=\"If Heart Disease Present\", avg_glucose_level=\"Average Glucose Level\",smoking_status=\"If Smoke\"),color=\"stroke\",opacity=0.8,size=\"heart_disease\",size_max=20)\nbmiAgeSexStrokePlot.update_yaxes(tick0=1.0, dtick=1.0)\n#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\nbmiAgeSexStrokePlot.update_xaxes(tick0=1, dtick=10)\nbmiAgeSexStrokePlot.update_layout(margin=dict(l=40, r=40, b=40, t=40))\n#Multidimensional plot that depicts most of the variables with the stats of the given person including marriage status.\n#Younger people typically have a lower glucose level\n#Higher glucose level, higher chance to get a stroke\n#Older, higher chance\n#Higher BMI, higher chance\n#Females typically have a lower glucose level","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"3e073ec720f13cd8b852c6872da5cab6f616fbc4"}}},"pos":14,"start":1657638259824,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260083,"exec_count":14,"id":"5d5d0d","input":"stroke_data\nstroke_data.drop('smoking_status_smokes', axis = 1, inplace = True)","kernel":"ds_env","no_halt":true,"pos":15,"start":1657638260080,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260107,"exec_count":15,"id":"cbcd84","input":"Y = stroke_data['stroke']\nY","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0       1\n1       1\n2       1\n3       1\n4       1\n       ..\n4255    0\n4256    0\n4257    0\n4258    0\n4259    0\nName: stroke, Length: 4260, dtype: int64"},"exec_count":15}},"pos":16,"start":1657638260104,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260155,"exec_count":16,"id":"72b3a1","input":"X = stroke_data[['age', 'hypertension', 'heart_disease', 'avg_glucose_level', 'bmi', 'smoking_status_Unknown', 'smoking_status_formerly smoked', 'smoking_status_never smoked']]\nX","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>smoking_status_Unknown</th>\n      <th>smoking_status_formerly smoked</th>\n      <th>smoking_status_never smoked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4259</th>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4260 rows Ã— 8 columns</p>\n</div>","text/plain":"       age  hypertension  heart_disease  avg_glucose_level   bmi  \\\n0     80.0             0              1             105.92  32.5   \n1     74.0             1              1              70.09  27.4   \n2     69.0             0              0              94.39  22.8   \n3     78.0             0              0              58.57  24.2   \n4     81.0             1              0              80.43  29.7   \n...    ...           ...            ...                ...   ...   \n4255  13.0             0              0             103.08  18.6   \n4256  81.0             0              0             125.20  40.0   \n4257  35.0             0              0              82.99  30.6   \n4258  51.0             0              0             166.29  25.6   \n4259  44.0             0              0              85.28  26.2   \n\n      smoking_status_Unknown  smoking_status_formerly smoked  \\\n0                          0                               0   \n1                          0                               0   \n2                          0                               0   \n3                          1                               0   \n4                          0                               0   \n...                      ...                             ...   \n4255                       1                               0   \n4256                       0                               0   \n4257                       0                               0   \n4258                       0                               1   \n4259                       1                               0   \n\n      smoking_status_never smoked  \n0                               1  \n1                               1  \n2                               1  \n3                               0  \n4                               1  \n...                           ...  \n4255                            0  \n4256                            1  \n4257                            1  \n4258                            0  \n4259                            0  \n\n[4260 rows x 8 columns]"},"exec_count":16}},"pos":17,"start":1657638260127,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260175,"exec_count":17,"id":"56a842","input":"X_train, X_test, Y_train, Y_test = train_test_split(X , Y, test_size = 0.2)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"(3408, 8)\n(852, 8)\n(3408,)\n(852,)\n"}},"pos":18,"start":1657638260169,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260235,"exec_count":18,"id":"4138b9","input":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,\n                                  max_depth = 3, min_samples_leaf = 5)\nclf_gini.fit(X_train, Y_train)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, min_samples_leaf=5, random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=3, min_samples_leaf=5, random_state=100)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(max_depth=3, min_samples_leaf=5, random_state=100)"},"exec_count":18}},"pos":19,"start":1657638260179,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260267,"exec_count":19,"id":"fea9bd","input":"Y_pred = clf_gini.predict(X_test)\nprint(\"predicted values:\")\nprint(Y_pred)\nY_pred = clf_gini.predict(X_test)\nprint(\"predicted values:\")\nprint(Y_pred)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"predicted values:\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0]\npredicted values:\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0]\n"}},"pos":20,"start":1657638260243,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260293,"exec_count":20,"id":"fcb9b4","input":"print(len(Y_pred), len(Y_test))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"852 852\n"}},"pos":21,"start":1657638260279,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260318,"exec_count":21,"id":"84592e","input":"clf_gini.score(X_test, Y_test)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.965962441314554"},"exec_count":21}},"pos":22,"start":1657638260307,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260342,"exec_count":22,"id":"44bb6c","input":"accuracy_score(Y_test, Y_pred)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.965962441314554"},"exec_count":22}},"pos":23,"start":1657638260341,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260375,"exec_count":23,"id":"0fb150","input":"print(\"Accuarcy: \", accuracy_score(Y_test, Y_pred)*100)\n#852*2\nprint(\"Report : \", classification_report(Y_test, Y_pred))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Accuarcy:  96.59624413145539\nReport :                precision    recall  f1-score   support\n\n           0       0.97      1.00      0.98       823\n           1       0.00      0.00      0.00        29\n\n    accuracy                           0.97       852\n   macro avg       0.48      0.50      0.49       852\nweighted avg       0.93      0.97      0.95       852\n\n"},"1":{"name":"stderr","text":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning:\n\nPrecision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n\n/projects/65cfa0f0-7e13-4335-a821-03f129071bce/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning:\n\nPrecision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n\n/projects/65cfa0f0-7e13-4335-a821-03f129071bce/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning:\n\nPrecision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n\n"}},"pos":24,"start":1657638260350,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260390,"exec_count":24,"id":"eca116","input":"print(\"Confusion Matrix: \", confusion_matrix(Y_test, Y_pred))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Confusion Matrix:  [[823   0]\n [ 29   0]]\n"}},"pos":25,"start":1657638260386,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260555,"exec_count":25,"id":"7ca0a1","input":"from imblearn.over_sampling import SMOTE\nfrom collections import Counter\ncounter = Counter(Y_train)\nprint('Before', counter)\nsmt = SMOTE()\nX_train_sm, Y_train_sm = smt.fit_resample(X_train, Y_train)\nX_test_sm, Y_test_sm = smt.fit_resample(X_test, Y_test)\ncounter = Counter(Y_train_sm)\nprint('After', counter)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Before Counter({0: 3301, 1: 107})\nAfter Counter({0: 3301, 1: 3301})\n"}},"pos":26,"start":1657638260396,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260601,"exec_count":26,"id":"e2d32e","input":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,\n                                  max_depth = 3, min_samples_leaf = 5)\nclf_gini.fit(X_train_sm, Y_train_sm)\ny_pred = clf_gini.predict(X_train_sm)\nprint(\"predicted values:\")\nprint(y_pred)\n#y_pred = clf_gini.predict(X_train_sm)\n#print(\"predicted values:\")\n#print(y_pred)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"predicted values:\n[1 1 1 ... 1 1 1]\n"}},"pos":27,"start":1657638260563,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260620,"exec_count":27,"id":"fe4841","input":"accuracy_score(Y_train_sm, y_pred)","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"0.7955165101484398"},"exec_count":27}},"pos":28,"start":1657638260609,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260655,"exec_count":29,"id":"2ebd1c","input":"stroke_data.columns","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/plain":"Index(['age', 'hypertension', 'heart_disease', 'avg_glucose_level', 'bmi',\n       'stroke', 'smoking_status_Unknown', 'smoking_status_formerly smoked',\n       'smoking_status_never smoked'],\n      dtype='object')"},"exec_count":29}},"pos":29,"start":1657638260652,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260664,"exec_count":30,"id":"ffb5c0","input":"params = {\n    'max_depth': [2, 3, 5, 10, 20],\n    'min_samples_leaf': [5, 10, 20, 50, 100],\n    'criterion': [\"gini\", \"entropy\"]\n}","kernel":"ds_env","no_halt":true,"pos":32,"start":1657638260661,"state":"done","type":"cell"}
{"cell_type":"code","end":1657638260673,"exec_count":31,"id":"5104c8","input":"grid_search = GridSearchCV(estimator = dt, param_grid = params, cv = 4, n_jobs = -1, verbose = 1, scoring = \"accuracy\")","kernel":"ds_env","no_halt":true,"pos":33,"start":1657638260671,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"211206","input":"## EDA - Exploratory Data Analysis\n\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"81c3d4","input":"The older you are, the more likely you are to have a stroke. The higher you average glucose level is, the higher the stroke risk becomes. The higher your BMI is, the more likely you ate to have a stroke\n\nThe most dangerous combination is a high glucose level, and old age\n\nThe only data point that does not have any direct relation to strokes is age, although it does raise the chance for a person to get a stroke, when they are older\n","pos":13,"state":"done","type":"cell"}
{"end":1657638260634,"exec_count":28,"id":"fcdcb0","input":"#Hyperparameter tuning","kernel":"ds_env","no_halt":true,"pos":28.5,"start":1657638260633,"state":"done","type":"cell"}
{"end":1657638268472,"exec_count":32,"id":"2f4e07","input":"%%time\ngrid_search.fit(X_train_sm, Y_train_sm)","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Fitting 4 folds for each of 50 candidates, totalling 200 fits\n"},"1":{"name":"stdout","text":"CPU times: user 210 ms, sys: 61.4 ms, total: 271 ms\nWall time: 7.75 s\n"},"2":{"data":{"text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=4, estimator=DecisionTreeClassifier(random_state=42), n_jobs=-1,\n             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n                         &#x27;max_depth&#x27;: [2, 3, 5, 10, 20],\n                         &#x27;min_samples_leaf&#x27;: [5, 10, 20, 50, 100]},\n             scoring=&#x27;accuracy&#x27;, verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=4, estimator=DecisionTreeClassifier(random_state=42), n_jobs=-1,\n             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],\n                         &#x27;max_depth&#x27;: [2, 3, 5, 10, 20],\n                         &#x27;min_samples_leaf&#x27;: [5, 10, 20, 50, 100]},\n             scoring=&#x27;accuracy&#x27;, verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=42)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=42)</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(cv=4, estimator=DecisionTreeClassifier(random_state=42), n_jobs=-1,\n             param_grid={'criterion': ['gini', 'entropy'],\n                         'max_depth': [2, 3, 5, 10, 20],\n                         'min_samples_leaf': [5, 10, 20, 50, 100]},\n             scoring='accuracy', verbose=1)"},"exec_count":32}},"pos":34,"start":1657638260695,"state":"done","type":"cell"}
{"end":1657638268544,"exec_count":33,"id":"3c86e5","input":"score_stroke_data = pd.DataFrame(grid_search.cv_results_)\nscore_stroke_data.head()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean_fit_time</th>\n      <th>std_fit_time</th>\n      <th>mean_score_time</th>\n      <th>std_score_time</th>\n      <th>param_criterion</th>\n      <th>param_max_depth</th>\n      <th>param_min_samples_leaf</th>\n      <th>params</th>\n      <th>split0_test_score</th>\n      <th>split1_test_score</th>\n      <th>split2_test_score</th>\n      <th>split3_test_score</th>\n      <th>mean_test_score</th>\n      <th>std_test_score</th>\n      <th>rank_test_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.017703</td>\n      <td>0.000960</td>\n      <td>0.003632</td>\n      <td>0.002088</td>\n      <td>gini</td>\n      <td>2</td>\n      <td>5</td>\n      <td>{'criterion': 'gini', 'max_depth': 2, 'min_sam...</td>\n      <td>0.789219</td>\n      <td>0.793459</td>\n      <td>0.793333</td>\n      <td>0.790303</td>\n      <td>0.791578</td>\n      <td>0.001858</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.018991</td>\n      <td>0.003189</td>\n      <td>0.002258</td>\n      <td>0.000107</td>\n      <td>gini</td>\n      <td>2</td>\n      <td>10</td>\n      <td>{'criterion': 'gini', 'max_depth': 2, 'min_sam...</td>\n      <td>0.789219</td>\n      <td>0.793459</td>\n      <td>0.793333</td>\n      <td>0.790303</td>\n      <td>0.791578</td>\n      <td>0.001858</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.015929</td>\n      <td>0.002742</td>\n      <td>0.004922</td>\n      <td>0.004336</td>\n      <td>gini</td>\n      <td>2</td>\n      <td>20</td>\n      <td>{'criterion': 'gini', 'max_depth': 2, 'min_sam...</td>\n      <td>0.789219</td>\n      <td>0.793459</td>\n      <td>0.793333</td>\n      <td>0.790303</td>\n      <td>0.791578</td>\n      <td>0.001858</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.015973</td>\n      <td>0.004828</td>\n      <td>0.004745</td>\n      <td>0.004306</td>\n      <td>gini</td>\n      <td>2</td>\n      <td>50</td>\n      <td>{'criterion': 'gini', 'max_depth': 2, 'min_sam...</td>\n      <td>0.789219</td>\n      <td>0.793459</td>\n      <td>0.793333</td>\n      <td>0.790303</td>\n      <td>0.791578</td>\n      <td>0.001858</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.014964</td>\n      <td>0.004602</td>\n      <td>0.004542</td>\n      <td>0.004166</td>\n      <td>gini</td>\n      <td>2</td>\n      <td>100</td>\n      <td>{'criterion': 'gini', 'max_depth': 2, 'min_sam...</td>\n      <td>0.789219</td>\n      <td>0.793459</td>\n      <td>0.793333</td>\n      <td>0.790303</td>\n      <td>0.791578</td>\n      <td>0.001858</td>\n      <td>40</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n0       0.017703      0.000960         0.003632        0.002088   \n1       0.018991      0.003189         0.002258        0.000107   \n2       0.015929      0.002742         0.004922        0.004336   \n3       0.015973      0.004828         0.004745        0.004306   \n4       0.014964      0.004602         0.004542        0.004166   \n\n  param_criterion param_max_depth param_min_samples_leaf  \\\n0            gini               2                      5   \n1            gini               2                     10   \n2            gini               2                     20   \n3            gini               2                     50   \n4            gini               2                    100   \n\n                                              params  split0_test_score  \\\n0  {'criterion': 'gini', 'max_depth': 2, 'min_sam...           0.789219   \n1  {'criterion': 'gini', 'max_depth': 2, 'min_sam...           0.789219   \n2  {'criterion': 'gini', 'max_depth': 2, 'min_sam...           0.789219   \n3  {'criterion': 'gini', 'max_depth': 2, 'min_sam...           0.789219   \n4  {'criterion': 'gini', 'max_depth': 2, 'min_sam...           0.789219   \n\n   split1_test_score  split2_test_score  split3_test_score  mean_test_score  \\\n0           0.793459           0.793333           0.790303         0.791578   \n1           0.793459           0.793333           0.790303         0.791578   \n2           0.793459           0.793333           0.790303         0.791578   \n3           0.793459           0.793333           0.790303         0.791578   \n4           0.793459           0.793333           0.790303         0.791578   \n\n   std_test_score  rank_test_score  \n0        0.001858               40  \n1        0.001858               40  \n2        0.001858               40  \n3        0.001858               40  \n4        0.001858               40  "},"exec_count":33}},"pos":35,"start":1657638268481,"state":"done","type":"cell"}
{"end":1657638268595,"exec_count":34,"id":"3781af","input":"score_stroke_data.nlargest(5, \"mean_test_score\")","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean_fit_time</th>\n      <th>std_fit_time</th>\n      <th>mean_score_time</th>\n      <th>std_score_time</th>\n      <th>param_criterion</th>\n      <th>param_max_depth</th>\n      <th>param_min_samples_leaf</th>\n      <th>params</th>\n      <th>split0_test_score</th>\n      <th>split1_test_score</th>\n      <th>split2_test_score</th>\n      <th>split3_test_score</th>\n      <th>mean_test_score</th>\n      <th>std_test_score</th>\n      <th>rank_test_score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>45</th>\n      <td>0.058440</td>\n      <td>0.003561</td>\n      <td>0.002522</td>\n      <td>0.000088</td>\n      <td>entropy</td>\n      <td>20</td>\n      <td>5</td>\n      <td>{'criterion': 'entropy', 'max_depth': 20, 'min...</td>\n      <td>0.903695</td>\n      <td>0.918231</td>\n      <td>0.923030</td>\n      <td>0.925455</td>\n      <td>0.917603</td>\n      <td>0.008440</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>0.046900</td>\n      <td>0.002688</td>\n      <td>0.004194</td>\n      <td>0.002729</td>\n      <td>gini</td>\n      <td>20</td>\n      <td>5</td>\n      <td>{'criterion': 'gini', 'max_depth': 20, 'min_sa...</td>\n      <td>0.891581</td>\n      <td>0.923077</td>\n      <td>0.920606</td>\n      <td>0.924242</td>\n      <td>0.914877</td>\n      <td>0.013514</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>0.054273</td>\n      <td>0.007163</td>\n      <td>0.007000</td>\n      <td>0.003635</td>\n      <td>entropy</td>\n      <td>10</td>\n      <td>5</td>\n      <td>{'criterion': 'entropy', 'max_depth': 10, 'min...</td>\n      <td>0.895215</td>\n      <td>0.909146</td>\n      <td>0.913939</td>\n      <td>0.920606</td>\n      <td>0.909727</td>\n      <td>0.009314</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>0.043768</td>\n      <td>0.005736</td>\n      <td>0.012657</td>\n      <td>0.008005</td>\n      <td>gini</td>\n      <td>10</td>\n      <td>5</td>\n      <td>{'criterion': 'gini', 'max_depth': 10, 'min_sa...</td>\n      <td>0.887341</td>\n      <td>0.909752</td>\n      <td>0.914545</td>\n      <td>0.924242</td>\n      <td>0.908970</td>\n      <td>0.013535</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>0.054551</td>\n      <td>0.007489</td>\n      <td>0.005222</td>\n      <td>0.004546</td>\n      <td>entropy</td>\n      <td>20</td>\n      <td>10</td>\n      <td>{'criterion': 'entropy', 'max_depth': 20, 'min...</td>\n      <td>0.886735</td>\n      <td>0.920654</td>\n      <td>0.916364</td>\n      <td>0.907273</td>\n      <td>0.907756</td>\n      <td>0.013063</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    mean_fit_time  std_fit_time  mean_score_time  std_score_time  \\\n45       0.058440      0.003561         0.002522        0.000088   \n20       0.046900      0.002688         0.004194        0.002729   \n40       0.054273      0.007163         0.007000        0.003635   \n15       0.043768      0.005736         0.012657        0.008005   \n46       0.054551      0.007489         0.005222        0.004546   \n\n   param_criterion param_max_depth param_min_samples_leaf  \\\n45         entropy              20                      5   \n20            gini              20                      5   \n40         entropy              10                      5   \n15            gini              10                      5   \n46         entropy              20                     10   \n\n                                               params  split0_test_score  \\\n45  {'criterion': 'entropy', 'max_depth': 20, 'min...           0.903695   \n20  {'criterion': 'gini', 'max_depth': 20, 'min_sa...           0.891581   \n40  {'criterion': 'entropy', 'max_depth': 10, 'min...           0.895215   \n15  {'criterion': 'gini', 'max_depth': 10, 'min_sa...           0.887341   \n46  {'criterion': 'entropy', 'max_depth': 20, 'min...           0.886735   \n\n    split1_test_score  split2_test_score  split3_test_score  mean_test_score  \\\n45           0.918231           0.923030           0.925455         0.917603   \n20           0.923077           0.920606           0.924242         0.914877   \n40           0.909146           0.913939           0.920606         0.909727   \n15           0.909752           0.914545           0.924242         0.908970   \n46           0.920654           0.916364           0.907273         0.907756   \n\n    std_test_score  rank_test_score  \n45        0.008440                1  \n20        0.013514                2  \n40        0.009314                3  \n15        0.013535                4  \n46        0.013063                5  "},"exec_count":34}},"pos":36,"start":1657638268552,"state":"done","type":"cell"}
{"end":1657638268610,"exec_count":35,"id":"3786f9","input":"grid_search.best_estimator_","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, max_depth=20, min_samples_leaf=5,\n                       random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(criterion=&#x27;entropy&#x27;, max_depth=20, min_samples_leaf=5,\n                       random_state=42)</pre></div></div></div></div></div>","text/plain":"DecisionTreeClassifier(criterion='entropy', max_depth=20, min_samples_leaf=5,\n                       random_state=42)"},"exec_count":35}},"pos":37,"start":1657638268602,"state":"done","type":"cell"}
{"end":1657638271043,"exec_count":39,"id":"70d381","input":"from sklearn.metrics import classification_report","kernel":"ds_env","no_halt":true,"pos":41.5,"start":1657638271031,"state":"done","type":"cell"}
{"end":1657638271119,"exec_count":40,"id":"995529","input":"print(classification_report(Y_test_sm, dt_best.predict(X_test_sm)))","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.71      0.90      0.79       823\n           1       0.86      0.63      0.72       823\n\n    accuracy                           0.76      1646\n   macro avg       0.78      0.76      0.76      1646\nweighted avg       0.78      0.76      0.76      1646\n\n"}},"pos":42,"start":1657638271117,"state":"done","type":"cell"}
{"end":1657638980476,"exec_count":42,"id":"ce4885","input":"def evaluate_model(dt_classifier):\n    print(\"Train Accuracy :\", accuracy_score(Y_train_sm, dt_classifier.predict(X_train_sm)))\n    print(\"Train Confusion Matrix:\")\n    print(confusion_matrix(Y_train_sm, dt_classifier.predict(X_train_sm)))\n    print(\"-\"*50)\n    print(\"Test Accuracy :\", accuracy_score(Y_test_sm, dt_classifier.predict(X_test_sm)))\n    print(\"Test Confusion Matrix:\")\n    print(confusion_matrix(Y_test_sm, dt_classifier.predict(X_test_sm)))","kernel":"ds_env","pos":39,"start":1657638980455,"state":"done","type":"cell"}
{"end":1657638983880,"exec_count":43,"id":"abcb61","input":"evaluate_model(dt_best)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Train Accuracy : 0.9637988488336867\nTrain Confusion Matrix:\n[[3168  133]\n [ 106 3195]]\n--------------------------------------------------\nTest Accuracy : 0.7624544349939246\nTest Confusion Matrix:\n[[740  83]\n [308 515]]\n"}},"pos":40,"start":1657638983846,"state":"done","type":"cell"}
{"end":1657639809937,"exec_count":44,"id":"03242d","input":"dt_best = grid_search.best_estimator_","kernel":"ds_env","pos":38,"start":1657639809929,"state":"done","type":"cell"}
{"id":0,"time":1657649181858,"type":"user"}
{"last_load":1657635476866,"type":"file"}