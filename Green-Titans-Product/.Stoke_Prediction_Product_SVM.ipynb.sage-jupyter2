{"backend_state":"running","connection_file":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/.local/share/jupyter/runtime/kernel-f4e46ca1-cdf2-4b23-974e-e07f6ce950ce.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657131543420,"exec_count":1,"id":"049369","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px","kernel":"ds_env","no_halt":true,"pos":0,"start":1657131543006,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131543512,"exec_count":3,"id":"5c8afb","input":"stroke_data.describe()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>37132.980512</td>\n      <td>40.596497</td>\n      <td>0.068561</td>\n      <td>0.036394</td>\n      <td>91.503646</td>\n      <td>27.814299</td>\n      <td>0.031932</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>20978.055430</td>\n      <td>22.445165</td>\n      <td>0.252735</td>\n      <td>0.187289</td>\n      <td>22.703827</td>\n      <td>6.722199</td>\n      <td>0.175841</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>77.000000</td>\n      <td>0.080000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>55.120000</td>\n      <td>10.300000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>18682.000000</td>\n      <td>22.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>75.060000</td>\n      <td>23.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>37640.000000</td>\n      <td>41.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>88.050000</td>\n      <td>27.400000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>55363.000000</td>\n      <td>58.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>104.045000</td>\n      <td>32.100000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>72940.000000</td>\n      <td>82.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>168.150000</td>\n      <td>47.500000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                 id          age  hypertension  heart_disease  \\\ncount   4259.000000  4259.000000   4259.000000    4259.000000   \nmean   37132.980512    40.596497      0.068561       0.036394   \nstd    20978.055430    22.445165      0.252735       0.187289   \nmin       77.000000     0.080000      0.000000       0.000000   \n25%    18682.000000    22.000000      0.000000       0.000000   \n50%    37640.000000    41.000000      0.000000       0.000000   \n75%    55363.000000    58.000000      0.000000       0.000000   \nmax    72940.000000    82.000000      1.000000       1.000000   \n\n       avg_glucose_level          bmi       stroke  \ncount        4259.000000  4259.000000  4259.000000  \nmean           91.503646    27.814299     0.031932  \nstd            22.703827     6.722199     0.175841  \nmin            55.120000    10.300000     0.000000  \n25%            75.060000    23.000000     0.000000  \n50%            88.050000    27.400000     0.000000  \n75%           104.045000    32.100000     0.000000  \nmax           168.150000    47.500000     1.000000  "},"exec_count":3}},"pos":2,"start":1657131543474,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131543524,"exec_count":4,"id":"afebb9","input":"def pie():\n    global stroke_data\n    new_stroke_data = stroke_data.groupby('smoking_status').count()\n    options = list(new_stroke_data.index)\n    counts = []\n    for val in options:\n        counts.append(new_stroke_data[\"heart_disease\"][val])\n\n    new_fig = px.pie(new_stroke_data, values=counts, names=options, title=\"Percentage of Smokers\")\n    new_fig.show()\ndef scat():\n    global stroke_data\n    new_fig = px.scatter(stroke_data, x=\"age\", y=\"bmi\",color=\"avg_glucose_level\")\n    new_fig.show()\n\ndef smoke_hist():\n    global stroke_data\n    fig = px.histogram(stroke_data, x=\"smoking_status\", y=\"avg_glucose_level\", color='gender', barmode='group',height=400)\n    fig.show()","kernel":"ds_env","no_halt":true,"pos":6,"start":1657131543519,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131543896,"exec_count":5,"id":"9865e8","input":"pie()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"f783522afa1bc94198d1468de1ea5fcf9a110759"}}},"pos":7,"start":1657131543527,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131544010,"exec_count":6,"id":"c45419","input":"scat()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"3e2b25b4e12319b2263ebed6a560915568fea0a4"}}},"pos":8,"start":1657131543906,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131544285,"exec_count":7,"id":"a508d9","input":"smoke_hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"a9f0fb116e84a4078179cbfea627fe20b64262b2"}}},"pos":9,"start":1657131544025,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131544466,"exec_count":8,"id":"227372","input":"fig = px.scatter_matrix(stroke_data,\n    dimensions=[\"age\", \"avg_glucose_level\", \"bmi\"],\n    color=\"stroke\")\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"a65a47416e8a5157a5cfaa9be2dac232e835bdc7"}}},"pos":10,"start":1657131544354,"state":"done","type":"cell"}
{"cell_type":"code","end":1657131544743,"exec_count":9,"id":"c18bf6","input":"hd = pd.read_csv(\"./healthcare-dataset-stroke-data.csv\")\nhd.drop('id',inplace=True,axis=1)\nhd.dropna(inplace=True)\nhd.reset_index(drop=True, inplace=False)\nhd.drop([466, 544, 928, 1559, 2128, 2764, 2840, 3825, 4188, 4209, 4838, 270, 358])\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([1],15)\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([0],6)\nbmiAgeSexStrokePlot = px.scatter_3d(hd,y=hd[\"avg_glucose_level\"],x=hd[\"age\"], z=hd[\"bmi\"], symbol=\"ever_married\",labels=dict(stroke=\"Number of Strokes\",age=\"Age\",gender=\"Sex\", bmi=\"BMI\", heart_disease=\"If Heart Disease Present\", avg_glucose_level=\"Average Glucose Level\",smoking_status=\"If Smoke\"),color=\"stroke\",opacity=0.8,size=\"heart_disease\",size_max=20)\nbmiAgeSexStrokePlot.update_yaxes(tick0=1.0, dtick=1.0)\n#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\nbmiAgeSexStrokePlot.update_xaxes(tick0=1, dtick=10)\nbmiAgeSexStrokePlot.update_layout(margin=dict(l=40, r=40, b=40, t=40))\n#Multidimensional plot that depicts most of the variables with the stats of the given person including marriage status.\n#Younger people typically have a lower glucose level\n#Higher glucose level, higher chance to get a stroke\n#Older, higher chance\n#Higher BMI, higher chance\n#Females typically have a lower glucose level","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"4c6f6b8766c529d79648313de78bb496a21c91c3"}}},"pos":12,"scrolled":true,"start":1657131544484,"state":"done","type":"cell"}
{"cell_type":"code","end":1657132071586,"exec_count":11,"id":"e3fb6f","input":"stroke_data = pd.read_csv(\"healthcare-dataset-stroke-data.csv\")\n#hypertension = high blood pressure\nstroke_data.dropna(axis = 0, how = 'any', inplace = True)\nstroke_data.drop(stroke_data.index[stroke_data['gender'] == 'Other'], inplace = True)\n\nstroke_data1 = stroke_data.loc[stroke_data['avg_glucose_level'] <= 168.32]\nstroke_data = stroke_data1\nstroke_data.reset_index(drop = True, inplace = True)\n\nstroke_data2 = stroke_data.loc[stroke_data['bmi'] <= 47.5]\nstroke_data = stroke_data2\nstroke_data.reset_index(drop = True, inplace = True)\n\ncolumns_to_drop = ['id']\nstroke_data.drop(columns_to_drop, axis=1, inplace=True)\nstroke_data","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_2746/4075248508.py:15: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gender</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>ever_married</th>\n      <th>work_type</th>\n      <th>Residence_type</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>smoking_status</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Male</td>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Female</td>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Female</td>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>Unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Female</td>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>Female</td>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>children</td>\n      <td>Rural</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>Unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>Female</td>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Urban</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>never smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>Female</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Rural</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>never smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>Male</td>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>formerly smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>Female</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Govt_job</td>\n      <td>Urban</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>Unknown</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 11 columns</p>\n</div>","text/plain":"      gender   age  hypertension  heart_disease ever_married      work_type  \\\n0       Male  80.0             0              1          Yes        Private   \n1       Male  74.0             1              1          Yes        Private   \n2     Female  69.0             0              0           No        Private   \n3     Female  78.0             0              0          Yes        Private   \n4     Female  81.0             1              0          Yes        Private   \n...      ...   ...           ...            ...          ...            ...   \n4254  Female  13.0             0              0           No       children   \n4255  Female  81.0             0              0          Yes  Self-employed   \n4256  Female  35.0             0              0          Yes  Self-employed   \n4257    Male  51.0             0              0          Yes        Private   \n4258  Female  44.0             0              0          Yes       Govt_job   \n\n     Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n0             Rural             105.92  32.5     never smoked       1  \n1             Rural              70.09  27.4     never smoked       1  \n2             Urban              94.39  22.8     never smoked       1  \n3             Urban              58.57  24.2          Unknown       1  \n4             Rural              80.43  29.7     never smoked       1  \n...             ...                ...   ...              ...     ...  \n4254          Rural             103.08  18.6          Unknown       0  \n4255          Urban             125.20  40.0     never smoked       0  \n4256          Rural              82.99  30.6     never smoked       0  \n4257          Rural             166.29  25.6  formerly smoked       0  \n4258          Urban              85.28  26.2          Unknown       0  \n\n[4259 rows x 11 columns]"},"exec_count":11}},"pos":1,"start":1657132071260,"state":"done","type":"cell"}
{"cell_type":"code","end":1657132130699,"exec_count":12,"id":"b29dbd","input":"stroke_data.keys()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['gender', 'age', 'hypertension', 'heart_disease', 'ever_married',\n       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',\n       'smoking_status', 'stroke'],\n      dtype='object')"},"exec_count":12}},"pos":14,"start":1657132130687,"state":"done","type":"cell"}
{"cell_type":"code","end":1657132131162,"exec_count":13,"id":"990fc6","input":"stroke_data.info()","kernel":"ds_env","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4259 entries, 0 to 4258\nData columns (total 11 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   gender             4259 non-null   object \n 1   age                4259 non-null   float64\n 2   hypertension       4259 non-null   int64  \n 3   heart_disease      4259 non-null   int64  \n 4   ever_married       4259 non-null   object \n 5   work_type          4259 non-null   object \n 6   Residence_type     4259 non-null   object \n 7   avg_glucose_level  4259 non-null   float64\n 8   bmi                4259 non-null   float64\n 9   smoking_status     4259 non-null   object \n 10  stroke             4259 non-null   int64  \ndtypes: float64(3), int64(3), object(5)\nmemory usage: 366.1+ KB\n"}},"pos":15,"start":1657132131134,"state":"done","type":"cell"}
{"cell_type":"code","id":"46ce4b","input":"","pos":3,"type":"cell"}
{"cell_type":"code","id":"4efaf2","input":"","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"3aaa1e","input":"### Dummy Vars\n\n","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"5d65ac","input":"## EDA - Exploratory Data Analysis\n\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"63c319","input":"### Support Vector Machine\n\n","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"e93a24","input":"The older you are, the more likely you are to have a stroke. The higher you average glucose level is, the higher the stroke risk becomes. The higher your BMI is, the more likely you ate to have a stroke\n\nThe most dangerous combination is a high glucose level, and old age\n\nThe only data point that does not have any direct relation to strokes is age, although it does raise the chance for a person to get a stroke, when they are older\n","pos":11,"state":"done","type":"cell"}
{"collapsed":true,"end":1657132684218,"exec_count":21,"id":"cede83","input":"stroke_data[\"ever_married\"] = dummies_married[\"Yes\"]\nprint(stroke_data.head())\nprint(stroke_data.keys())\n\n# 1 - Yes\n# 0 - No","kernel":"ds_env","output":{"0":{"name":"stdout","text":"   gender   age  hypertension  heart_disease  ever_married work_type  \\\n0       1  80.0             0              1             1   Private   \n1       1  74.0             1              1             1   Private   \n2       0  69.0             0              0             0   Private   \n3       0  78.0             0              0             1   Private   \n4       0  81.0             1              0             1   Private   \n\n  Residence_type  avg_glucose_level   bmi smoking_status  stroke  \n0          Rural             105.92  32.5   never smoked       1  \n1          Rural              70.09  27.4   never smoked       1  \n2          Urban              94.39  22.8   never smoked       1  \n3          Urban              58.57  24.2        Unknown       1  \n4          Rural              80.43  29.7   never smoked       1  \nIndex(['gender', 'age', 'hypertension', 'heart_disease', 'ever_married',\n       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',\n       'smoking_status', 'stroke'],\n      dtype='object')\n"},"1":{"name":"stderr","text":"/tmp/ipykernel_2746/2366302696.py:1: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":20,"scrolled":true,"start":1657132684163,"state":"done","type":"cell"}
{"collapsed":true,"exec_count":18,"id":"e1a5d3","input":"stroke_data[\"gender\"] = dummies_gender[\"Male\"]\nprint(stroke_data.head())\nprint(stroke_data.keys())\n\n# 1 - Male\n# 0 - Female","kernel":"ds_env","output":{"0":{"name":"stdout","text":"   gender   age  hypertension  heart_disease ever_married work_type  \\\n0       1  80.0             0              1          Yes   Private   \n1       1  74.0             1              1          Yes   Private   \n2       0  69.0             0              0           No   Private   \n3       0  78.0             0              0          Yes   Private   \n4       0  81.0             1              0          Yes   Private   \n\n  Residence_type  avg_glucose_level   bmi smoking_status  stroke  \n0          Rural             105.92  32.5   never smoked       1  \n1          Rural              70.09  27.4   never smoked       1  \n2          Urban              94.39  22.8   never smoked       1  \n3          Urban              58.57  24.2        Unknown       1  \n4          Rural              80.43  29.7   never smoked       1  \nIndex(['gender', 'age', 'hypertension', 'heart_disease', 'ever_married',\n       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',\n       'smoking_status', 'stroke'],\n      dtype='object')\n"},"1":{"name":"stderr","text":"/tmp/ipykernel_2746/1453821098.py:1: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"}},"pos":18,"scrolled":true,"state":"done","type":"cell"}
{"end":1657132627809,"exec_count":19,"id":"9ee2c7","input":"dummies_married = pd.get_dummies(stroke_data[\"ever_married\"])\ndummies_married.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>No</th>\n      <th>Yes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   No  Yes\n0   0    1\n1   0    1\n2   1    0\n3   0    1\n4   0    1"},"exec_count":19}},"pos":19,"start":1657132627788,"state":"done","type":"cell"}
{"end":1657133229177,"exec_count":26,"id":"8cf505","input":"dummies_home = pd.get_dummies(stroke_data[\"Residence_type\"])\ndummies_home","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 2 columns</p>\n</div>","text/plain":"      0  1\n0     0  1\n1     0  1\n2     1  0\n3     1  0\n4     0  1\n...  .. ..\n4254  0  1\n4255  1  0\n4256  0  1\n4257  0  1\n4258  1  0\n\n[4259 rows x 2 columns]"},"exec_count":26}},"pos":22,"start":1657133229166,"state":"done","type":"cell"}
{"exec_count":15,"id":"10d118","input":"dummies_gender = pd.get_dummies(stroke_data[\"gender\"])\ndummies_gender.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Female</th>\n      <th>Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Female  Male\n0       0     1\n1       0     1\n2       1     0\n3       1     0\n4       1     0"},"exec_count":15}},"pos":17,"state":"done","type":"cell"}
{"exec_count":23,"id":"5c7f97","input":"dummies_work = pd.get_dummies(stroke_data[\"work_type\"])\ndummies_work","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Govt_job</th>\n      <th>Never_worked</th>\n      <th>Private</th>\n      <th>Self-employed</th>\n      <th>children</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 5 columns</p>\n</div>","text/plain":"      Govt_job  Never_worked  Private  Self-employed  children\n0            0             0        1              0         0\n1            0             0        1              0         0\n2            0             0        1              0         0\n3            0             0        1              0         0\n4            0             0        1              0         0\n...        ...           ...      ...            ...       ...\n4254         0             0        0              0         1\n4255         0             0        0              1         0\n4256         0             0        0              1         0\n4257         0             0        1              0         0\n4258         1             0        0              0         0\n\n[4259 rows x 5 columns]"},"exec_count":23}},"pos":21,"state":"done","type":"cell"}
{"exec_count":27,"id":"995cdb","input":"stroke_data[\"Residence_type\"] = dummies_home[\"0\"]\nprint(stroke_data.head())\nprint(stroke_data.keys())\n\n# 1 - Rural\n# 0 - Urban","kernel":"ds_env","output":{"0":{"ename":"KeyError","evalue":"'Rural'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3621\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3620\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:136\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/_libs/index.pyx:144\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mpandas/_libs/index_class_helper.pxi:81\u001b[0m, in \u001b[0;36mpandas._libs.index.UInt64Engine._check_type\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Rural'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [27]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m stroke_data[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mResidence_type\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[43mdummies_home\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mRural\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(stroke_data\u001b[38;5;241m.\u001b[39mhead())\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(stroke_data\u001b[38;5;241m.\u001b[39mkeys())\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:3505\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3503\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   3504\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[0;32m-> 3505\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   3506\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[1;32m   3507\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:3623\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3621\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[1;32m   3622\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[0;32m-> 3623\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[1;32m   3624\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m   3625\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3626\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3627\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3628\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n","\u001b[0;31mKeyError\u001b[0m: 'Rural'"]}},"pos":23,"state":"done","type":"cell"}
{"id":"b18884","input":"stroke_data[\"work_type\"] = dummies_work[\"Male\"]\nprint(stroke_data.head())\nprint(stroke_data.keys())\n\n# 1 - Male\n# 0 - Female","pos":21.5,"type":"cell"}
{"id":"cba657","input":"","kernel":"ds_env","pos":12.5,"type":"cell"}
{"id":"f1b6a9","input":"","pos":24,"type":"cell"}
{"id":0,"time":1657131784201,"type":"user"}
{"last_load":1657131520845,"type":"file"}