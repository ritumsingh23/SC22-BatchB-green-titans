{"backend_state":"running","connection_file":"/projects/65cfa0f0-7e13-4335-a821-03f129071bce/.local/share/jupyter/runtime/kernel-a69d95c6-d144-454f-b98e-c6cb0b0068ac.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657300285751,"exec_count":4,"id":"c974d7","input":"stroke_data.describe()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n      <td>4259.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>37132.980512</td>\n      <td>40.596497</td>\n      <td>0.068561</td>\n      <td>0.036394</td>\n      <td>91.503646</td>\n      <td>27.814299</td>\n      <td>0.031932</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>20978.055430</td>\n      <td>22.445165</td>\n      <td>0.252735</td>\n      <td>0.187289</td>\n      <td>22.703827</td>\n      <td>6.722199</td>\n      <td>0.175841</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>77.000000</td>\n      <td>0.080000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>55.120000</td>\n      <td>10.300000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>18682.000000</td>\n      <td>22.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>75.060000</td>\n      <td>23.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>37640.000000</td>\n      <td>41.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>88.050000</td>\n      <td>27.400000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>55363.000000</td>\n      <td>58.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>104.045000</td>\n      <td>32.100000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>72940.000000</td>\n      <td>82.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>168.150000</td>\n      <td>47.500000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                 id          age  hypertension  heart_disease  \\\ncount   4259.000000  4259.000000   4259.000000    4259.000000   \nmean   37132.980512    40.596497      0.068561       0.036394   \nstd    20978.055430    22.445165      0.252735       0.187289   \nmin       77.000000     0.080000      0.000000       0.000000   \n25%    18682.000000    22.000000      0.000000       0.000000   \n50%    37640.000000    41.000000      0.000000       0.000000   \n75%    55363.000000    58.000000      0.000000       0.000000   \nmax    72940.000000    82.000000      1.000000       1.000000   \n\n       avg_glucose_level          bmi       stroke  \ncount        4259.000000  4259.000000  4259.000000  \nmean           91.503646    27.814299     0.031932  \nstd            22.703827     6.722199     0.175841  \nmin            55.120000    10.300000     0.000000  \n25%            75.060000    23.000000     0.000000  \n50%            88.050000    27.400000     0.000000  \n75%           104.045000    32.100000     0.000000  \nmax           168.150000    47.500000     1.000000  "},"exec_count":4}},"pos":3,"start":1657300285711,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300285774,"exec_count":5,"id":"248f64","input":"def pie():\n    global stroke_data\n    new_stroke_data = stroke_data.groupby('smoking_status').count()\n    options = list(new_stroke_data.index)\n    counts = []\n    for val in options:\n        counts.append(new_stroke_data[\"heart_disease\"][val])\n\n    new_fig = px.pie(new_stroke_data, values=counts, names=options, title=\"Percentage of Smokers\")\n    new_fig.show()\ndef scat():\n    global stroke_data\n    new_fig = px.scatter(stroke_data, x=\"age\", y=\"bmi\",color=\"avg_glucose_level\")\n    new_fig.show()\n\ndef smoke_hist():\n    global stroke_data\n    fig = px.histogram(stroke_data, x=\"smoking_status\", y=\"avg_glucose_level\", color='gender', barmode='group',height=400)\n    fig.show()","kernel":"ds_env","no_halt":true,"pos":5,"start":1657300285768,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300286099,"exec_count":6,"id":"98d543","input":"pie()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"7fb0f8b095d482b7af81b893570a8cb8135b3dd2"}}},"pos":6,"start":1657300285778,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300286214,"exec_count":7,"id":"59d39a","input":"scat()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"d52c164cbdff5d5ee5d720af2126aa0ea5e4915a"}}},"pos":7,"start":1657300286112,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300286335,"exec_count":8,"id":"1736e9","input":"smoke_hist()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"62dfb1c4619d6fb1c7bdb25c1c7f54794d8e66b3"}}},"pos":8,"start":1657300286218,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300286426,"exec_count":9,"id":"395139","input":"fig = px.scatter_matrix(stroke_data,\n    dimensions=[\"age\", \"avg_glucose_level\", \"bmi\"],\n    color=\"stroke\")\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"21298a6dd055cd5e1172bae427a2738b43a951cd"}}},"pos":9,"start":1657300286344,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300286699,"exec_count":10,"id":"b503b6","input":"hd = pd.read_csv(\"./healthcare-dataset-stroke-data.csv\")\nhd.drop('id',inplace=True,axis=1)\nhd.dropna(inplace=True)\nhd.reset_index(drop=True, inplace=False)\nhd.drop([466, 544, 928, 1559, 2128, 2764, 2840, 3825, 4188, 4209, 4838, 270, 358])\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([1],15)\nhd[\"heart_disease\"]=hd[\"heart_disease\"].replace([0],6)\nbmiAgeSexStrokePlot = px.scatter_3d(hd,y=hd[\"avg_glucose_level\"],x=hd[\"age\"], z=hd[\"bmi\"], symbol=\"ever_married\",labels=dict(stroke=\"Number of Strokes\",age=\"Age\",gender=\"Sex\", bmi=\"BMI\", heart_disease=\"If Heart Disease Present\", avg_glucose_level=\"Average Glucose Level\",smoking_status=\"If Smoke\"),color=\"stroke\",opacity=0.8,size=\"heart_disease\",size_max=20)\nbmiAgeSexStrokePlot.update_yaxes(tick0=1.0, dtick=1.0)\n#bmiAgeSexStrokePlot.update_traces(marker_size = 2.5)\nbmiAgeSexStrokePlot.update_xaxes(tick0=1, dtick=10)\nbmiAgeSexStrokePlot.update_layout(margin=dict(l=40, r=40, b=40, t=40))\n#Multidimensional plot that depicts most of the variables with the stats of the given person including marriage status.\n#Younger people typically have a lower glucose level\n#Higher glucose level, higher chance to get a stroke\n#Older, higher chance\n#Higher BMI, higher chance\n#Females typically have a lower glucose level","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"c81413465905ca65ee479d4e92668e3431025213"}}},"pos":11,"start":1657300286432,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300288079,"exec_count":15,"id":"8af58b","input":"#target = stroke_data['stroke']\n#input_columns = stroke_data.loc[:, stroke_data.columns != 'stroke']\n#x_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size = 0.8)","kernel":"ds_env","no_halt":true,"pos":25,"start":1657300288073,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300288302,"exec_count":22,"id":"8d125c","input":"sd = stroke_data","kernel":"ds_env","no_halt":true,"pos":36,"start":1657300288301,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300288371,"exec_count":25,"id":"3b5a52","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier as KNN\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nfrom sklearn import svm\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom numpy import mean\nfrom numpy import std\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport warnings\nfrom sklearn.linear_model import LogisticRegression","kernel":"ds_env","pos":1,"start":1657300288363,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300291863,"exec_count":26,"id":"5db477","input":"stroke_data = pd.read_csv(\"healthcare-dataset-stroke-data.csv\")\n#hypertension = high blood pressure\nstroke_data.dropna(axis = 0, how = 'any', inplace = True)\nstroke_data.drop(stroke_data.index[stroke_data['gender'] == 'Other'], inplace = True)\n\nstroke_data1 = stroke_data.loc[stroke_data['avg_glucose_level'] <= 168.32]\nstroke_data = stroke_data1\nstroke_data.reset_index(drop = True, inplace = True)\n\nstroke_data2 = stroke_data.loc[stroke_data['bmi'] <= 47.5]\nstroke_data = stroke_data2\nstroke_data.reset_index(drop = True, inplace = True)\n\nstroke_data","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>gender</th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>ever_married</th>\n      <th>work_type</th>\n      <th>Residence_type</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>smoking_status</th>\n      <th>stroke</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>31112</td>\n      <td>Male</td>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>53882</td>\n      <td>Male</td>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10434</td>\n      <td>Female</td>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>60491</td>\n      <td>Female</td>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Urban</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>Unknown</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>12109</td>\n      <td>Female</td>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>never smoked</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4254</th>\n      <td>14180</td>\n      <td>Female</td>\n      <td>13.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>No</td>\n      <td>children</td>\n      <td>Rural</td>\n      <td>103.08</td>\n      <td>18.6</td>\n      <td>Unknown</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4255</th>\n      <td>44873</td>\n      <td>Female</td>\n      <td>81.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Urban</td>\n      <td>125.20</td>\n      <td>40.0</td>\n      <td>never smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4256</th>\n      <td>19723</td>\n      <td>Female</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Self-employed</td>\n      <td>Rural</td>\n      <td>82.99</td>\n      <td>30.6</td>\n      <td>never smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4257</th>\n      <td>37544</td>\n      <td>Male</td>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Private</td>\n      <td>Rural</td>\n      <td>166.29</td>\n      <td>25.6</td>\n      <td>formerly smoked</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4258</th>\n      <td>44679</td>\n      <td>Female</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Yes</td>\n      <td>Govt_job</td>\n      <td>Urban</td>\n      <td>85.28</td>\n      <td>26.2</td>\n      <td>Unknown</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4259 rows × 12 columns</p>\n</div>","text/plain":"         id  gender   age  hypertension  heart_disease ever_married  \\\n0     31112    Male  80.0             0              1          Yes   \n1     53882    Male  74.0             1              1          Yes   \n2     10434  Female  69.0             0              0           No   \n3     60491  Female  78.0             0              0          Yes   \n4     12109  Female  81.0             1              0          Yes   \n...     ...     ...   ...           ...            ...          ...   \n4254  14180  Female  13.0             0              0           No   \n4255  44873  Female  81.0             0              0          Yes   \n4256  19723  Female  35.0             0              0          Yes   \n4257  37544    Male  51.0             0              0          Yes   \n4258  44679  Female  44.0             0              0          Yes   \n\n          work_type Residence_type  avg_glucose_level   bmi   smoking_status  \\\n0           Private          Rural             105.92  32.5     never smoked   \n1           Private          Rural              70.09  27.4     never smoked   \n2           Private          Urban              94.39  22.8     never smoked   \n3           Private          Urban              58.57  24.2          Unknown   \n4           Private          Rural              80.43  29.7     never smoked   \n...             ...            ...                ...   ...              ...   \n4254       children          Rural             103.08  18.6          Unknown   \n4255  Self-employed          Urban             125.20  40.0     never smoked   \n4256  Self-employed          Rural              82.99  30.6     never smoked   \n4257        Private          Rural             166.29  25.6  formerly smoked   \n4258       Govt_job          Urban              85.28  26.2          Unknown   \n\n      stroke  \n0          1  \n1          1  \n2          1  \n3          1  \n4          1  \n...      ...  \n4254       0  \n4255       0  \n4256       0  \n4257       0  \n4258       0  \n\n[4259 rows x 12 columns]"},"exec_count":26}},"pos":2,"start":1657300291754,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300305896,"exec_count":27,"id":"23e410","input":"dummies = pd.get_dummies(stroke_data[\"gender\"])\nstroke_data[\"gender_int\"] = dummies[\"Male\"]\n\ndummies = pd.get_dummies(stroke_data[\"ever_married\"])\nstroke_data[\"ever_married_int\"] = dummies[\"Yes\"]\n\ndummies = pd.get_dummies(stroke_data[\"Residence_type\"])\nstroke_data[\"Residence_type_int\"] = dummies[\"Rural\"]\n\nz = np.unique(stroke_data[\"smoking_status\"], return_inverse=True)[1].tolist()\nstroke_data[\"smoking_status_int\"] = z\n\n\nstroke_data.drop(['id', 'gender', 'ever_married', 'work_type', 'Residence_type', 'smoking_status'], axis=1, inplace=True)","kernel":"ds_env","pos":14,"start":1657300305528,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300348654,"exec_count":36,"id":"b4f78a","input":"stroke_data.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n      <th>gender_int</th>\n      <th>ever_married_int</th>\n      <th>Residence_type_int</th>\n      <th>smoking_status_int</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    age  hypertension  heart_disease  avg_glucose_level   bmi  stroke  \\\n0  80.0             0              1             105.92  32.5       1   \n1  74.0             1              1              70.09  27.4       1   \n2  69.0             0              0              94.39  22.8       1   \n3  78.0             0              0              58.57  24.2       1   \n4  81.0             1              0              80.43  29.7       1   \n\n   gender_int  ever_married_int  Residence_type_int  smoking_status_int  \n0           1                 1                   1                   2  \n1           1                 1                   1                   2  \n2           0                 0                   0                   2  \n3           0                 1                   0                   0  \n4           0                 1                   1                   2  "},"exec_count":36}},"pos":19,"start":1657300348632,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300349469,"exec_count":37,"id":"aab5f5","input":"warnings.filterwarnings('ignore')","kernel":"ds_env","pos":20,"start":1657300349462,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300410469,"exec_count":40,"id":"44cc22","input":"#from imblearn.over_sampling import SMOTE\nfrom collections import Counter\n#counter = Counter(y_train)\n#print('Before', counter)\n#smt = SMOTE()\n#x_train_sm, y_train_sm = smt.fit_resample(x_train, y_train)\n\ncounter = Counter(y_train)\nprint('After', counter)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"After Counter({0: 3305, 1: 3291})\n"}},"pos":28,"start":1657300410421,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300460605,"exec_count":46,"id":"95c171","input":"k = 5\nmy_KNN_model = KNN(n_neighbors = k)\nmy_KNN_model.fit(x_train, y_train)\ny_pred = my_KNN_model.predict(x_test)","kernel":"ds_env","pos":27,"start":1657300460535,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300470515,"exec_count":48,"id":"c36e1e","input":"knn2 = KNN(n_neighbors = 1, weights = 'uniform', algorithm = 'brute', metric = 'manhattan')\nknn2.fit(x_train, y_train)\ny_pred2 = knn2.predict(x_test)\ntotal_squared_error = (np.sum((y_test - y_pred2)**2))\nmean_squared_error = total_squared_error/len(y_pred2)\nprint(mean_squared_error)\nkNN_MSE = mean_squared_error\nsns.heatmap(confusion_matrix(y_test, y_pred2), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.06545454545454546\n"},"1":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":48},"2":{"data":{"image/png":"48b41a651074e7fa298c5d7a378d7ce60ed184e1","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":29,"start":1657300470071,"state":"done","type":"cell"}
{"cell_type":"code","end":1657300582496,"exec_count":51,"id":"1fe5f3","input":"stroke_data.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>hypertension</th>\n      <th>heart_disease</th>\n      <th>avg_glucose_level</th>\n      <th>bmi</th>\n      <th>stroke</th>\n      <th>gender_int</th>\n      <th>ever_married_int</th>\n      <th>Residence_type_int</th>\n      <th>smoking_status_int</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>80.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>105.92</td>\n      <td>32.5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>74.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>70.09</td>\n      <td>27.4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>94.39</td>\n      <td>22.8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>78.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>58.57</td>\n      <td>24.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>81.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>80.43</td>\n      <td>29.7</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    age  hypertension  heart_disease  avg_glucose_level   bmi  stroke  \\\n0  80.0             0              1             105.92  32.5       1   \n1  74.0             1              1              70.09  27.4       1   \n2  69.0             0              0              94.39  22.8       1   \n3  78.0             0              0              58.57  24.2       1   \n4  81.0             1              0              80.43  29.7       1   \n\n   gender_int  ever_married_int  Residence_type_int  smoking_status_int  \n0           1                 1                   1                   2  \n1           1                 1                   1                   2  \n2           0                 0                   0                   2  \n3           0                 1                   0                   0  \n4           0                 1                   1                   2  "},"exec_count":51}},"pos":26,"start":1657300582475,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301210411,"exec_count":52,"id":"988391","input":"parameters = {\n    'penalty' : ['none','l1','l2'],\n    'C'       : np.logspace(-3,3,7),\n    'solver'  : ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']\n}\nlogreg = LogisticRegression(max_iter=1200)\ngrid_search = GridSearchCV(estimator = logreg,\n                           param_grid = parameters,\n                           scoring = 'accuracy',\n                           cv=10)\n\ngrid_search.fit(x_train,y_train)\ny_pred=grid_search.predict(x_test)\n\nprint(\"Tuned Hyperparameters :\", grid_search.best_params_)\nprint(\"Accuracy :\",grid_search.best_score_)\n\ntotal_squared_error = (np.sum((y_test - y_pred)**2))\nmean_squared_error = total_squared_error/len(y_test)\nprint(mean_squared_error)\n\nsns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Tuned Hyperparameters : {'C': 0.01, 'penalty': 'none', 'solver': 'saga'}\nAccuracy : 0.8044254379914471\n0.20727272727272728\n"},"1":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":52},"2":{"data":{"image/png":"048f6aea66f3ebb9314c21880f3f40f239ffd770","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":23,"start":1657300587337,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301332947,"exec_count":54,"id":"34e91a","input":"from sklearn.ensemble import AdaBoostClassifier\nbase = DecisionTreeClassifier(max_depth = 6)\nclada = AdaBoostClassifier(n_estimators = 500, base_estimator = base, learning_rate = 0.7)\nclada.fit(x_train,y_train)\ny_hata = clada.predict(x_test)\ntotal_squared_error = (np.sum((y_test - y_hata)**2))\nmean_squared_error = total_squared_error/len(y_test)\nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.03151515151515152\n"}},"pos":37,"start":1657301323880,"state":"done","type":"cell"}
{"cell_type":"code","end":1657301347717,"exec_count":55,"id":"3c0cd4","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hata), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":55},"1":{"data":{"image/png":"a88bba348d624e2f34c1a9ef09dd7219128a996b","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":38,"start":1657301347332,"state":"done","type":"cell"}
{"cell_type":"code","end":1657302033223,"exec_count":59,"id":"7a67e4","input":"def svmModel():\n    global y_train, x_train, y_test, x_test, y_test2, x_test2\n    clf = svm.SVC(kernel = 'linear').fit(x_train, y_train)\n    total_squared_error = (np.sum((y_test - y_test)**2))\n    mean_squared_error = total_squared_error/len(y_test)\n    print(\"Mean Squared Error\", mean_squared_error)\n    param_grid = {'C': [0.1, 1, 10, 100, 1000],\n                  'gamma': [1, 0.1, 0.01, 0.001, 0.0001],\n                  'kernel': ['rbf']}\n    grid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3, return_train_score=False)\n    grid.fit(x_train, y_train)\n    print(\"Grid Best Params: \",grid.best_params_)\n    print(\"Grid Best Estimator: \",grid.best_estimator_)\n    print(\"Grid Best Score: \", grid.best_score_)\n    grid_predictions = grid.predict(x_test)\n    print(classification_report(y_test, grid_predictions))","kernel":"ds_env","pos":32,"start":1657302033210,"state":"done","type":"cell"}
{"cell_type":"code","end":1657302305743,"exec_count":60,"id":"71309f","input":"svmModel()","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Mean Squared Error 0.0\nFitting 5 folds for each of 25 candidates, totalling 125 fits\n"},"1":{"name":"stdout","text":"[CV 1/5] END ........C=0.1, gamma=1, kernel=rbf;, score=0.514 total time=   3.9s\n"},"10":{"name":"stdout","text":"[CV 5/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=0.901 total time=   2.5s\n"},"100":{"name":"stdout","text":"[CV 5/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=0.830 total time=   1.4s\n"},"101":{"name":"stdout","text":"[CV 1/5] END .......C=1000, gamma=1, kernel=rbf;, score=0.935 total time=   3.1s\n"},"102":{"name":"stdout","text":"[CV 2/5] END .......C=1000, gamma=1, kernel=rbf;, score=0.920 total time=   3.4s\n"},"103":{"name":"stdout","text":"[CV 3/5] END .......C=1000, gamma=1, kernel=rbf;, score=0.938 total time=   3.1s\n"},"104":{"name":"stdout","text":"[CV 4/5] END .......C=1000, gamma=1, kernel=rbf;, score=0.942 total time=   3.4s\n"},"105":{"name":"stdout","text":"[CV 5/5] END .......C=1000, gamma=1, kernel=rbf;, score=0.941 total time=   3.2s\n"},"106":{"name":"stdout","text":"[CV 1/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=0.962 total time=   1.7s\n"},"107":{"name":"stdout","text":"[CV 2/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=0.944 total time=   1.5s\n"},"108":{"name":"stdout","text":"[CV 3/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=0.948 total time=   1.5s\n"},"109":{"name":"stdout","text":"[CV 4/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=0.953 total time=   1.5s\n"},"11":{"name":"stdout","text":"[CV 1/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.833 total time=   1.4s\n"},"110":{"name":"stdout","text":"[CV 5/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=0.951 total time=   1.5s\n"},"111":{"name":"stdout","text":"[CV 1/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=0.964 total time=   2.1s\n"},"112":{"name":"stdout","text":"[CV 2/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=0.943 total time=   2.3s\n"},"113":{"name":"stdout","text":"[CV 3/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=0.951 total time=   2.0s\n"},"114":{"name":"stdout","text":"[CV 4/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=0.954 total time=   2.1s\n"},"115":{"name":"stdout","text":"[CV 5/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=0.951 total time=   2.0s\n"},"116":{"name":"stdout","text":"[CV 1/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=0.901 total time=   3.5s\n"},"117":{"name":"stdout","text":"[CV 2/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=0.900 total time=   3.6s\n"},"118":{"name":"stdout","text":"[CV 3/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=0.900 total time=   3.8s\n"},"119":{"name":"stdout","text":"[CV 4/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=0.895 total time=   3.0s\n"},"12":{"name":"stdout","text":"[CV 2/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.825 total time=   1.4s\n"},"120":{"name":"stdout","text":"[CV 5/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=0.901 total time=   3.4s\n"},"121":{"name":"stdout","text":"[CV 1/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=0.847 total time=   2.4s\n"},"122":{"name":"stdout","text":"[CV 2/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=0.839 total time=   2.2s\n"},"123":{"name":"stdout","text":"[CV 3/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=0.845 total time=   2.0s\n"},"124":{"name":"stdout","text":"[CV 4/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=0.832 total time=   2.4s\n"},"125":{"name":"stdout","text":"[CV 5/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=0.839 total time=   2.0s\n"},"126":{"name":"stdout","text":"Grid Best Params:  {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}\nGrid Best Estimator:  SVC(C=10, gamma=0.1)\nGrid Best Score:  0.9546682518896317\n"},"127":{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.98      0.92      0.95       818\n           1       0.92      0.98      0.95       832\n\n    accuracy                           0.95      1650\n   macro avg       0.95      0.95      0.95      1650\nweighted avg       0.95      0.95      0.95      1650\n\n"},"13":{"name":"stdout","text":"[CV 3/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.836 total time=   1.3s\n"},"14":{"name":"stdout","text":"[CV 4/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.835 total time=   1.6s\n"},"15":{"name":"stdout","text":"[CV 5/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.841 total time=   1.4s\n"},"16":{"name":"stdout","text":"[CV 1/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.785 total time=   1.3s\n"},"17":{"name":"stdout","text":"[CV 2/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.770 total time=   1.3s\n"},"18":{"name":"stdout","text":"[CV 3/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.772 total time=   1.3s\n"},"19":{"name":"stdout","text":"[CV 4/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.779 total time=   1.3s\n"},"2":{"name":"stdout","text":"[CV 2/5] END ........C=0.1, gamma=1, kernel=rbf;, score=0.517 total time=   2.8s\n"},"20":{"name":"stdout","text":"[CV 5/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.792 total time=   1.3s\n"},"21":{"name":"stdout","text":"[CV 1/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.767 total time=   1.4s\n"},"22":{"name":"stdout","text":"[CV 2/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.762 total time=   1.4s\n"},"23":{"name":"stdout","text":"[CV 3/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.766 total time=   1.4s\n"},"24":{"name":"stdout","text":"[CV 4/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.770 total time=   1.4s\n"},"25":{"name":"stdout","text":"[CV 5/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.770 total time=   1.6s\n"},"26":{"name":"stdout","text":"[CV 1/5] END ..........C=1, gamma=1, kernel=rbf;, score=0.930 total time=   3.3s\n"},"27":{"name":"stdout","text":"[CV 2/5] END ..........C=1, gamma=1, kernel=rbf;, score=0.911 total time=   3.1s\n"},"28":{"name":"stdout","text":"[CV 3/5] END ..........C=1, gamma=1, kernel=rbf;, score=0.930 total time=   3.3s\n"},"29":{"name":"stdout","text":"[CV 4/5] END ..........C=1, gamma=1, kernel=rbf;, score=0.931 total time=   3.3s\n"},"3":{"name":"stdout","text":"[CV 3/5] END ........C=0.1, gamma=1, kernel=rbf;, score=0.513 total time=   2.9s\n"},"30":{"name":"stdout","text":"[CV 5/5] END ..........C=1, gamma=1, kernel=rbf;, score=0.935 total time=   3.4s\n"},"31":{"name":"stdout","text":"[CV 1/5] END ........C=1, gamma=0.1, kernel=rbf;, score=0.952 total time=   1.9s\n"},"32":{"name":"stdout","text":"[CV 2/5] END ........C=1, gamma=0.1, kernel=rbf;, score=0.942 total time=   1.7s\n"},"33":{"name":"stdout","text":"[CV 3/5] END ........C=1, gamma=0.1, kernel=rbf;, score=0.943 total time=   1.7s\n"},"34":{"name":"stdout","text":"[CV 4/5] END ........C=1, gamma=0.1, kernel=rbf;, score=0.949 total time=   1.7s\n"},"35":{"name":"stdout","text":"[CV 5/5] END ........C=1, gamma=0.1, kernel=rbf;, score=0.937 total time=   2.1s\n"},"36":{"name":"stdout","text":"[CV 1/5] END .......C=1, gamma=0.01, kernel=rbf;, score=0.883 total time=   1.3s\n"},"37":{"name":"stdout","text":"[CV 2/5] END .......C=1, gamma=0.01, kernel=rbf;, score=0.886 total time=   1.1s\n"},"38":{"name":"stdout","text":"[CV 3/5] END .......C=1, gamma=0.01, kernel=rbf;, score=0.886 total time=   1.1s\n"},"39":{"name":"stdout","text":"[CV 4/5] END .......C=1, gamma=0.01, kernel=rbf;, score=0.886 total time=   1.1s\n"},"4":{"name":"stdout","text":"[CV 4/5] END ........C=0.1, gamma=1, kernel=rbf;, score=0.516 total time=   2.9s\n"},"40":{"name":"stdout","text":"[CV 5/5] END .......C=1, gamma=0.01, kernel=rbf;, score=0.901 total time=   1.1s\n"},"41":{"name":"stdout","text":"[CV 1/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.816 total time=   1.2s\n"},"42":{"name":"stdout","text":"[CV 2/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.803 total time=   1.3s\n"},"43":{"name":"stdout","text":"[CV 3/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.803 total time=   1.6s\n"},"44":{"name":"stdout","text":"[CV 4/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.803 total time=   1.2s\n"},"45":{"name":"stdout","text":"[CV 5/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.811 total time=   1.2s\n"},"46":{"name":"stdout","text":"[CV 1/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.779 total time=   1.4s\n"},"47":{"name":"stdout","text":"[CV 2/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.776 total time=   1.4s\n"},"48":{"name":"stdout","text":"[CV 3/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.772 total time=   1.3s\n"},"49":{"name":"stdout","text":"[CV 4/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.778 total time=   1.4s\n"},"5":{"name":"stdout","text":"[CV 5/5] END ........C=0.1, gamma=1, kernel=rbf;, score=0.513 total time=   2.8s\n"},"50":{"name":"stdout","text":"[CV 5/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.782 total time=   1.5s\n"},"51":{"name":"stdout","text":"[CV 1/5] END .........C=10, gamma=1, kernel=rbf;, score=0.935 total time=   3.1s\n"},"52":{"name":"stdout","text":"[CV 2/5] END .........C=10, gamma=1, kernel=rbf;, score=0.920 total time=   3.7s\n"},"53":{"name":"stdout","text":"[CV 3/5] END .........C=10, gamma=1, kernel=rbf;, score=0.938 total time=   3.8s\n"},"54":{"name":"stdout","text":"[CV 4/5] END .........C=10, gamma=1, kernel=rbf;, score=0.942 total time=   3.1s\n"},"55":{"name":"stdout","text":"[CV 5/5] END .........C=10, gamma=1, kernel=rbf;, score=0.941 total time=   3.1s\n"},"56":{"name":"stdout","text":"[CV 1/5] END .......C=10, gamma=0.1, kernel=rbf;, score=0.963 total time=   1.6s\n"},"57":{"name":"stdout","text":"[CV 2/5] END .......C=10, gamma=0.1, kernel=rbf;, score=0.950 total time=   1.7s\n"},"58":{"name":"stdout","text":"[CV 3/5] END .......C=10, gamma=0.1, kernel=rbf;, score=0.953 total time=   1.6s\n"},"59":{"name":"stdout","text":"[CV 4/5] END .......C=10, gamma=0.1, kernel=rbf;, score=0.959 total time=   1.5s\n"},"6":{"name":"stdout","text":"[CV 1/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=0.882 total time=   2.3s\n"},"60":{"name":"stdout","text":"[CV 5/5] END .......C=10, gamma=0.1, kernel=rbf;, score=0.948 total time=   1.6s\n"},"61":{"name":"stdout","text":"[CV 1/5] END ......C=10, gamma=0.01, kernel=rbf;, score=0.941 total time=   0.8s\n"},"62":{"name":"stdout","text":"[CV 2/5] END ......C=10, gamma=0.01, kernel=rbf;, score=0.929 total time=   0.8s\n"},"63":{"name":"stdout","text":"[CV 3/5] END ......C=10, gamma=0.01, kernel=rbf;, score=0.937 total time=   0.8s\n"},"64":{"name":"stdout","text":"[CV 4/5] END ......C=10, gamma=0.01, kernel=rbf;, score=0.924 total time=   0.9s\n"},"65":{"name":"stdout","text":"[CV 5/5] END ......C=10, gamma=0.01, kernel=rbf;, score=0.940 total time=   0.9s\n"},"66":{"name":"stdout","text":"[CV 1/5] END .....C=10, gamma=0.001, kernel=rbf;, score=0.857 total time=   1.2s\n"},"67":{"name":"stdout","text":"[CV 2/5] END .....C=10, gamma=0.001, kernel=rbf;, score=0.854 total time=   1.2s\n"},"68":{"name":"stdout","text":"[CV 3/5] END .....C=10, gamma=0.001, kernel=rbf;, score=0.858 total time=   1.2s\n"},"69":{"name":"stdout","text":"[CV 4/5] END .....C=10, gamma=0.001, kernel=rbf;, score=0.839 total time=   1.2s\n"},"7":{"name":"stdout","text":"[CV 2/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=0.882 total time=   2.3s\n"},"70":{"name":"stdout","text":"[CV 5/5] END .....C=10, gamma=0.001, kernel=rbf;, score=0.862 total time=   1.2s\n"},"71":{"name":"stdout","text":"[CV 1/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.798 total time=   1.4s\n"},"72":{"name":"stdout","text":"[CV 2/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.783 total time=   1.3s\n"},"73":{"name":"stdout","text":"[CV 3/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.796 total time=   1.6s\n"},"74":{"name":"stdout","text":"[CV 4/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.796 total time=   1.4s\n"},"75":{"name":"stdout","text":"[CV 5/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.798 total time=   1.4s\n"},"76":{"name":"stdout","text":"[CV 1/5] END ........C=100, gamma=1, kernel=rbf;, score=0.935 total time=   3.1s\n"},"77":{"name":"stdout","text":"[CV 2/5] END ........C=100, gamma=1, kernel=rbf;, score=0.920 total time=   3.4s\n"},"78":{"name":"stdout","text":"[CV 3/5] END ........C=100, gamma=1, kernel=rbf;, score=0.938 total time=   3.1s\n"},"79":{"name":"stdout","text":"[CV 4/5] END ........C=100, gamma=1, kernel=rbf;, score=0.942 total time=   3.4s\n"},"8":{"name":"stdout","text":"[CV 3/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=0.886 total time=   2.4s\n"},"80":{"name":"stdout","text":"[CV 5/5] END ........C=100, gamma=1, kernel=rbf;, score=0.941 total time=   3.1s\n"},"81":{"name":"stdout","text":"[CV 1/5] END ......C=100, gamma=0.1, kernel=rbf;, score=0.961 total time=   1.6s\n"},"82":{"name":"stdout","text":"[CV 2/5] END ......C=100, gamma=0.1, kernel=rbf;, score=0.945 total time=   1.8s\n"},"83":{"name":"stdout","text":"[CV 3/5] END ......C=100, gamma=0.1, kernel=rbf;, score=0.948 total time=   1.5s\n"},"84":{"name":"stdout","text":"[CV 4/5] END ......C=100, gamma=0.1, kernel=rbf;, score=0.955 total time=   1.6s\n"},"85":{"name":"stdout","text":"[CV 5/5] END ......C=100, gamma=0.1, kernel=rbf;, score=0.950 total time=   1.6s\n"},"86":{"name":"stdout","text":"[CV 1/5] END .....C=100, gamma=0.01, kernel=rbf;, score=0.958 total time=   1.3s\n"},"87":{"name":"stdout","text":"[CV 2/5] END .....C=100, gamma=0.01, kernel=rbf;, score=0.939 total time=   1.1s\n"},"88":{"name":"stdout","text":"[CV 3/5] END .....C=100, gamma=0.01, kernel=rbf;, score=0.952 total time=   1.1s\n"},"89":{"name":"stdout","text":"[CV 4/5] END .....C=100, gamma=0.01, kernel=rbf;, score=0.945 total time=   1.1s\n"},"9":{"name":"stdout","text":"[CV 4/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=0.884 total time=   2.3s\n"},"90":{"name":"stdout","text":"[CV 5/5] END .....C=100, gamma=0.01, kernel=rbf;, score=0.948 total time=   1.1s\n"},"91":{"name":"stdout","text":"[CV 1/5] END ....C=100, gamma=0.001, kernel=rbf;, score=0.878 total time=   1.5s\n"},"92":{"name":"stdout","text":"[CV 2/5] END ....C=100, gamma=0.001, kernel=rbf;, score=0.874 total time=   1.7s\n"},"93":{"name":"stdout","text":"[CV 3/5] END ....C=100, gamma=0.001, kernel=rbf;, score=0.886 total time=   1.5s\n"},"94":{"name":"stdout","text":"[CV 4/5] END ....C=100, gamma=0.001, kernel=rbf;, score=0.867 total time=   1.5s\n"},"95":{"name":"stdout","text":"[CV 5/5] END ....C=100, gamma=0.001, kernel=rbf;, score=0.887 total time=   1.5s\n"},"96":{"name":"stdout","text":"[CV 1/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=0.822 total time=   1.7s\n"},"97":{"name":"stdout","text":"[CV 2/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=0.822 total time=   1.4s\n"},"98":{"name":"stdout","text":"[CV 3/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=0.829 total time=   1.5s\n"},"99":{"name":"stdout","text":"[CV 4/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=0.820 total time=   1.6s\n"}},"pos":33,"start":1657302043403,"state":"done","type":"cell"}
{"cell_type":"code","id":"52762e","input":"","kernel":"ds_env","no_halt":true,"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"000d7d","input":"# Machine Learning Models\n\n","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0f2a57","input":"### Dummies\n\n","pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"106af6","input":"## Shawn (SVM)","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"217407","input":"### Smote\n\n","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"7ee12d","input":"## Alan (AdaBoost)\n\n","pos":35,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"88573f","input":"The reason we used SMOTE was because our data was skewed, we had 4000\\+ negatives and 136 positives which caused the data to be imbalanced\n","pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"99c7d3","input":"## Sophia (KNN)\n\n","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b9403f","input":"## Jeong (Logistic Regression)\n\n","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ccd345","input":"## EDA - Exploratory Data Analysis\n\n","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d250c1","input":"The older you are, the more likely you are to have a stroke. The higher you average glucose level is, the higher the stroke risk becomes. The higher your BMI is, the more likely you ate to have a stroke\n\nThe most dangerous combination is a high glucose level, and old age\n\nThe only data point that does not have any direct relation to strokes is age, although it does raise the chance for a person to get a stroke, when they are older\n","pos":10,"state":"done","type":"cell"}
{"end":1657300448386,"exec_count":43,"id":"8f1f16","input":"target = stroke_data['stroke']\ninput_columns = stroke_data.loc[:, stroke_data.columns != \"stroke\"]\nsmote = SMOTE(random_state = 101)\nx_oversample, y_oversample = smote.fit_resample(input_columns, target)\nx_train, x_test, y_train, y_test = train_test_split(x_oversample, y_oversample, test_size=0.2, random_state=101)","kernel":"ds_env","pos":16,"start":1657300448351,"state":"done","type":"cell"}
{"id":"4934d2","input":"","kernel":"ds_env","no_halt":true,"pos":21,"type":"cell"}
{"id":0,"time":1657300327190,"type":"user"}
{"last_load":1657290129590,"type":"file"}